<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ESRI.ArcGIS.Client.BAO</name>
    </assembly>
    <members>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask">
            <summary>
            The Standard Geographies by Attributes task requests a list of feature/area names
            and their corresponding IDs based on the result of a string-based query
            on a Business Analyst Online data layer.
            </summary>
            <remarks>
            <para>Features/areas in the Business Analyst Online data layers are often identified by standardized FIPS codes.
            Alternatively, they may be identified in the Business Analyst Online data layers by some other ID.
            Standard Geographies by Attributes can be used to look up these IDs.</para>
            
            <para>Some applications of Standard Geographies by Attributes include the following:</para>
            
            <list type="bullet">
            <item><description>Suppose particular named geographic areas or regions have been identified by stakeholders for analysis.
            Given the partial or complete names of these areas of interest, Standard Geographies by Attributes can be
            used to look up their corresponding FIPS codes in order to specify the particular areas of interest
            in other analyses such as Summary Reports.
            </description></item>
            
            <item><description>United States Postal Services (USPS) ZIP code prefixes are a 3-digit code associated with
            USPS Sectional Center Facilities (SCFs). These SCFs generally represent a particular USPS geographic
            service area such as a city or a part of a city. Standard Geographies by Attributes can be used to
            look up the ZIP codes containing a 3-digit string. For example, the ZIP code prefix 065 is
            associated with the USPS SCF for New Haven, Connecticut. In this particular case, every single
            ZIP code in New Haven is associated with the SCF. By using Standard Geographies by Attributes
            and specifying the query string 065 on the Business Analyst Online ZIP code data layer, 
            a complete list of ZIP codes for the city of New Haven will be included in the output response
            along with all other ZIP codes containing the 065 string. In subsequent analysis, these ZIP code
            IDs that begin with "065" can be used to specify all New Haven ZIP codes in a Summary Reports analysis
            task using a StandardLayer.
            </description></item>
            </list> 
            <para>
            The result of this task is an array of <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> items containing IDs and names of
            all of the feature/area names and their corresponding IDs that satisfy the string-based query
            on the data layer. After looking up these IDs, they may be used to specify one or more
            geographic features/areas in a Summary Reports analysis using the <see cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/>
            as the value for the Boundaries parameter.
            </para>
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1">
            <summary>
            The BAOnlineTask class is the base class for a Business Analyst Online API task.
            </summary>
            <typeparam name="TResult">Type of task result.</typeparam>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BATask`2">
            <summary>
            The BATask class is the base abstract class for any Business Analyst task.
            </summary>
            <remarks>
            <para>A Business Analyst task can be constructed in two ways; as a standalone task
            using its own instance of the BAClient class or as a task sharing BAClient with other tasks.
            </para>
            <para>Public properties specified in this class are proxies to the properties of the encapsulated
            BAClient class. In other words, modification of a property value in an instance of the
            BATask class leads to modification of the corresponding property value in an associated instance
            of the BAClient class and in all tasks sharing this BAClient instance.
            </para>
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClient"/>
            <typeparam name="TResult">Type of task result.</typeparam>
            <typeparam name="TEventArgs">Type of result event args (should inherit from BAClientEventArgs).</typeparam>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AbstractTask">
            <summary>
            The AbstractTask class is the base class for all tasks.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractTask"/> class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.Client">
            <summary>
            Client instance associated with this task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.DisableClientCaching">
            <summary>
            If true, adds a timestamp parameter ("_ts") to the REST request to prevent the request from
            being loaded from the browser's cache.
            </summary>
            <remarks>Default: false.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.ProxyUrl">
            <summary>
            The URL to proxy the request through.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.Token">
            <summary>
            Token for accessing a secure task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.Url">
            <summary>
            URL of the task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractTask.RequestTimeout">
            <summary>
            The request timeout in seconds. A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>Client.Timeout</c>.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATask`2">BATask</see> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.Send(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters,System.Object)">
            <overloads>Sends a request to Business Analyst HTTP Service associated with this task.</overloads>
            <summary>
            Sends a request to Business Analyst HTTP Service associated with this task using this instance event handlers.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Business Analyst task parameters.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.Send(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters,System.Object,System.EventHandler{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},System.EventHandler{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs})">
            <summary>
            Sends a request to a Business Analyst HTTP Service associated with this task using specified even handlers.
            </summary>
            <param name="parameters">Business Analyst task parameters.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="failed">Execute failed event handler.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.PrepareVariables(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <summary>
            Prepares variables for HTTP service request.
            </summary>
            <param name="parameters">Business Analyst task parameters.</param>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.ResultHandler(ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Processes the result of task execution.
            </summary>
            <remarks>
            This method assigns a new value for the <c>LastResult</c> property using the
            <c>requestState.ResultObject</c> property value.
            </remarks>
            <param name="requestState">Request state of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BARequestState"/> type
            associated with the request.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATask`2.GetEventHandlers(System.EventHandler{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs}@,System.EventHandler{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs}@)">
            <summary>
            Gets event handlers associated with this instance.
            </summary>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="failed">Execute failed event handler.</param>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.Client.BATask`2.ExecuteCompleted">
            <summary>
            This event occurs when the ExecuteAsync operation completes.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.Client.BATask`2.Failed">
            <summary>
            This event occurs when the ExecuteAsync operation failes.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATask`2.TokenProvider">
            <summary>
            Provider responsible for updating the security token if the last one expires.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATask`2.LastResult">
            <summary>
            The last result of execution the task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1">BAOnlineTask</see> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1">BAOnlineTask</see> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1">BAOnlineTask</see> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in parameters of the constructor is implicitly converted to a private instance of
            the BAOnlineClient class.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1.Client">
            <summary>
            Business Analyst Online client class associated with this instance.
            </summary>
            <remarks>
            This class has the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type.
            </remarks>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters)">
            <overloads>Asynchronous executes a Standard Geographies by Attributes task.</overloads>
            <summary>
            Asynchronous executes a Standard Geographies by Attributes task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters,System.Object)">
            <summary>
            Asynchronous executes a Standard Geographies by Attributes task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask">
             <summary>
             The Drive Time task creates trade areas based on the driving time or driving distance around store features.
             </summary>
             <remarks>
             <para>Drive Time trade/service areas use street networks and approximate driving times
             based on attributes associated with the traversed streets around the Drive Time area origins.
             These area origins are point features such as businesses, store fronts, organizations, agencies, hospitals,
             or service centers that may serve the area or region, and may have competitors or affiliates nearby.</para> 
            
             <para>The Drive Time analysis using the <code>donut</code> parameter option creates output 
             trade/service areas that are in bands instead of concentric overlapping areas.
             For example, if three radii are entered with values of one, three, and five minutes, three output bands
             would be created with 0-1, 1â€“3, and 3â€“5 minute Drive Time trade areas instead of 0-1, 0-3, and 0-5 minute
             Drive Time trade areas. This will result in the creation of non-overlapping trade/service areas that will
             have significantly different results in subsequent analysis such as with Summary Reports.</para>
             
             <para>Some applications of Drive Time include the following:</para>
             <list type="bullet">
             <item><description>Drive Time trade/service areas resemble rings. In most marketing applications,
             the point origins of ring-based analyses will be retail storefronts.</description></item>
             <item><description>Drive Time trade/service area analysis may be useful for studying the underlying market
             characteristics and demographics of the surrounding population.</description></item>
             <item><description>Drive Time is the defining measure for most urban travel. Potential customer responses
             are better for a location advertised as being within five minutes rather than one described
             as being within two miles.</description></item>
             <item><description>Pizza delivery is a good example application scenario in the use of Drive Time trade/service areas.
             A business may want to define their trade/service area in terms of the total time required for a
             delivery from their storefront to their customers.  Drive Time analysis aids in creating these
             type of trade/service areas.</description></item>
             <item><description>Appliance repair operations use Drive Time trade/service areas to estimate the total length
             of their service calls.</description></item>
             </list>
             
             <para>In order to compensate for traffic patterns in the analysis task, adjust driving distances or times
             (the <c>Radii</c> parameter) accordingly. For example, if the analysis needs to be performed for
             a time of day when traffic patterns are heavy (i.e. rush hour) and the drive time takes twice as long,
             then enter driving distances or times that are half as long to reflect this pattern.</para>
             
             <para>The Drive Time analysis task differs significantly from Simple Rings-based trade/service areas,
             which define these areas based on straight-line ("as the crow flies") distances from the origin points.</para>
             
             <para>The result of this task is a <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/> object,
             which is compatible with ArcGIS Server's mapping APIs. FeatureSet, MapImage, and an array of
             <see cref="T:ESRI.ArcGIS.Client.BACore.ReportInfo"/> objects can be returned in it depending on task output options requested.</para>
             </remarks>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters"/>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2">
            <summary>
            The BAOTask class is the base class for "old" Business Analyst Online API tasks (deprecated).
            </summary>
            <remarks>
            This class is used as the base class for "old" tasks to provide compatibility with the previous
            version of Business Analyst Online API for Silverlight. It is deprecated and will be removed.
            The <cref name="BAOnlineTask"/> should be used instead for creation new tasks.
            </remarks>
            <typeparam name="TResult">Type of task result.</typeparam>
            <typeparam name="TEventArgs">Type of result event args (should inherit from BAClientEventArgs).</typeparam>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2">BAOTask</see> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2">BAOTask</see> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2">BAOTask</see> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in parameters of the constructor is implicitly converted to a private instance of
            the BAOnlineClient class.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.BAOTask`2.Client">
            <summary>
            Business Analyst Online client class associated with this instance.
            </summary>
            <remarks>
            This class has the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type.
            </remarks>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters)">
            <overloads>Asynchronous executes a Drive Time task.</overloads>
            <summary>
            Asynchronous executes a Drive Time task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters,System.Object)">
            <summary>
            Asynchronous executes a Drive Time task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.BAQueryTask.ExecuteCompleted">
            <summary>
            This event occurs when the ExecuteAsync operation completes.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.BAQueryTask.Failed">
            <summary>
            This event occurs when the ExecuteAsync operation failes.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BACommand">
            <summary>
            The BACommand class provides the unified execution of a Business Analyst task.
            </summary>
            <remarks>
            This class encapsulates an instance of a task to be executed together with task parameters.
            The execution of task is suspended
            until the <c>ExecuteAsync</c> method of this class is called. The unified interface
            of the BACommand class allows user to prepare a batch task consisting of heterogeneous tasks.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BACommand.#ctor(System.String,System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/> class without sender.
            </summary>
            <param name="commandName">Command name.</param>
            <param name="taskName">A name of task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BACommand.#ctor(System.String,System.String,ESRI.ArcGIS.Client.BACore.Client.BACommand.BASenderDelegate,ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/> class with a Business Analyst task sender.
            </summary>
            <param name="commandName">Command name.</param>
            <param name="taskName">A name of task to be executed.</param>
            <param name="sender">Sender delegate to execute the task.</param>
            <param name="parameters">Input parameters for the task.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BACommand.#ctor(System.String,System.String,ESRI.ArcGIS.Client.BACore.Client.BACommand.SenderDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/> class with a common sender.
            </summary>
            <param name="commandName">Command name.</param>
            <param name="taskName">A name of task to be executed.</param>
            <param name="sender">Sender delegate to execute the task.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BACommand.ExecuteAsync">
            <overloads>Asynchronous executes this command.</overloads>
            <summary>
            Asynchronous executes this command.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BACommand.ExecuteAsync(System.Object)">
            <summary>
            Asynchronous executes this command.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this command.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this command.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this command.</para>
            </remarks>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.Client.BACommand.ExecuteCompleted">
            <summary>
            This event occurs when the ExecuteAsync operation completes.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.Client.BACommand.Failed">
            <summary>
            This event occurs when the ExecuteAsync operation failes.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BACommand.Sender">
            <summary>
            Sender delegate to execute the task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BACommand.Name">
            <summary>
            Command name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BACommand.TaskName">
            <summary>
            Name of task to be executed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BACommand.LastResult">
            <summary>
            The last result of execution the command.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BACommand.SenderDelegate">
            <summary>
            Common sender delegate.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="failed">Execute failed event handler.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BACommand.BASenderDelegate">
            <summary>
            Business Analyst task sender delegate.
            </summary>
            <param name="parameters">Input parameters of a Business Analyst task.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="failed">Execute failed event handler.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsEventArgs">
            <summary>
            EventArgs for the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/><c>.ExecuteCompleted</c> event (deprecated).
            </summary>
            <remarks>
            <note>
            This class is deprecated. It is provided for compatibility with the previous version of
            the Business Analyst Online API for Silverlight. Use a result event handler with a more general version of
            EventArgs type, for example with the <c>BATaskEventArgs&lt;TaskResultOutput&gt;</c> type.
            </note>
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1">
            <summary>
            The BATaskEventArgs class provides event arguments on successful execution a Business Analyst task
            with strongly typed result.
            </summary>
            <typeparam name="TResult">Type of task result.</typeparam>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BATask`2"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs">
            <summary>
            The BAClientEventArgs class provides event arguments on successful execution a Business Analyst task.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BATask`2"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs">
            <summary>
            The ClientEventArgs class contains parameters passed to event handler on successful task execution.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs"/> class.
            </summary>
            <param name="result">Result returned by the task.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs.Result">
            <summary>
            A result returned by the task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class.
            </summary>
            <param name="resultObject">Task execution result.</param>
            <param name="taskName">Task name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.#ctor(System.Object,System.String,ESRI.ArcGIS.Client.Tasks.TaskEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class.
            </summary>
            <param name="resultObject">Task execution result.</param>
            <param name="taskName">Task name.</param>
            <param name="e">Task event args to get other parameters from.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.#ctor(System.Object,System.String,System.Collections.Generic.List{ESRI.ArcGIS.Client.BACore.TaskMessage},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class.
            </summary>
            <param name="resultObject">Task execution result.</param>
            <param name="taskName">Task name.</param>
            <param name="taskMessages">Messages returned by the task (can be null).</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.TaskName">
            <summary>
            Task Name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs.TaskMessages">
            <summary>
            Messages returned by the Task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1">BATaskEventArgs</see> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1">BATaskEventArgs</see> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1">BATaskEventArgs</see> class.
            </summary>
            <param name="resultObject">Task execution result.</param>
            <param name="taskName">Task name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1.#ctor(`0,System.String,ESRI.ArcGIS.Client.Tasks.TaskEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1">BATaskEventArgs</see> class.
            </summary>
            <param name="resultObject">Task execution result.</param>
            <param name="taskName">Task name.</param>
            <param name="e">Task event args to get other parameters from.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATaskEventArgs`1.Result">
            <summary>
            A result returned by the task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsEventArgs.TaskResultOutput">
            <summary>
            The TaskResultOutput returned by the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters">
             <summary>
             The BenchmarkReportParameters class provides input parameters for the Benchmark Report task.
             </summary>
             <remarks>
             <para>The <c>BenchmarkOptions</c> parameter specifies how to create the benchmark area:</para>
             
             <table>
             <tr>
            	<th>Value</th> <th>Description</th>
             </tr>
             <tr>
             <td><c>BenchmarkOptions.useOneOfTheTradeAreas</c></td>
             <td>selects the benchmark area by OID from the benchmark layer
             (the <c>BenchmarkLayer</c> and <c>BenchmarkAreaOID</c> parameters should be specified)</td>
             </tr>
             <tr>
             <td><c>BenchmarkOptions.useAverageValues</c></td>
             <td>creates the benchmark area by calculating average summarization values for all areas in the trade area layers</td>
             </tr>
             <tr>
             <td><c>BenchmarkOptions.useMedianValues</c></td>
             <td>creates the benchmark area by calculating median summarization values for all areas in the trade area layers</td>
             </tr>
             <tr>
             <td><c>BenchmarkOptions.useNone</c></td>
             <td>means no benchmark (creates a report without comparison with benchmark)</td>
             </tr>
             </table>
             
             <para>The <c>TAinRows</c> parameter determines the orientation of the summarization fields in the report:</para>
             <list type="bullet"> 
             <item><description><c>true</c> value outputs the report with the summarization fields
             in columns and the trade areas in rows.</description></item>
             <item><description><c>false</c> value (default) outputs the report with the summarization fields in rows and
             the trade areas in columns.</description></item>
             </list>
             
             <para>The <c>FieldSortType</c> parameter specifies the sorting rules based on the field
             specified with the <c>SortFieldName</c> parameter value:</para>
             
             <table>
             <tr>
            	<th>Value</th> <th>Description</th>
             </tr>
             <tr>
             <td><c>BenchmarkSortOptions.sortNone</c></td>
             <td>means no sorting</td>
             </tr>
             <tr>
             <td><c>BenchmarkSortOptions.sortByFieldOnly</c></td>
             <td>sorts by the field itself</td>
             </tr>
             <tr>
             <td><c>BenchmarkSortOptions.sortByFieldDifference</c></td>
             <td>sorts by the calculated difference between the field value and the benchmark field value</td>
             </tr>
             <tr>
             <td><c>BenchmarkSortOptions.sortByFieldPercent</c></td>
             <td>sorts by the calculated percent of the field value with respect to the benchmark field value</td>
             </tr>
             <tr>
             <td><c>BenchmarkSortOptions.sortByFieldIndex</c></td>
             <td>sorts by the field index (available for some summarization fields)</td>
             </tr>
             </table>
            
             <para>Output options for this task include creating a report (OutputTypes.GetReport). You need not specify
             the output options for this task because the GetReport output type is set by default.</para>
             </remarks>
             <exampleintro>
             The code snippet below creates BenchmarkReportParameters and then executes a Benchmark Report task.
             </exampleintro>
             <example>
             <code>
             BenchmarkReportParameters parameters = new BenchmarkReportParameters();
             
             // BenchmarkOptions.useNone is the default value for benchmarkOptions.
             parameters.BenchmarkOptions = BenchmarkOptions.useAverageValues;
             
             parameters.FieldSortType = BenchmarkSortOptions.sortByFieldDifference;
             parameters.SortFieldName = "TOTPOP_CY";
             parameters.Summarizations = new List&lt;string&gt;() { "TOTPOP_CY", "TOTHH_CY" };
             
             // true is the default value for TAinRows. 
             parameters.TAInRows = false;
             
             parameters.TALayersFields = new List&lt;string&gt;() { "STORE_ID" };
             
             // Trade areas can be either a feature set or standard layers.
             parameters.TradeAreas = new List&lt;Boundaries&gt;() { taLayer1, taLayer2 };
             
             // Set report options.
             ReportOptions reportOptions = new ReportOptions("PDF");
             reportOptions.Header = new ReportHeader("Benchmark Report for two rings");
             parameters.StandardReportOptions = reportOptions;
             
             benchmarkReportTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
             </code>
             </example>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters">
            <summary>
            The StandardReportParameters class is the base class for tasks producing standard reports.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters">
            <summary>
            The BATaskParameters class is the base class for Business Analyst tasks producing
            a complex output object such as <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/>.
            </summary>
            <remarks>
            <para>This class provides a technique for composing output types in the "OutputType" request variable.
            The <c>OutputTypes</c> property of this class specifies what output types are requested
            in parameters of a task. If no output type is specified, the default values for output types
            will be selected while composing the request variable. The mechanizm of selection default output types
            is implemented within the <c>SetDefaultOutputTypes</c> method. This method can be
            overriden in inheriting classes and required output types can be set in them. For example,
            in the <c>SummaryReportParameters</c> class, the overriden method tests if report options
            are specified and sets the <c>GetReport</c> output type if true.</para>
            
            <para>All Business Analyst task producing a complex output are devided into 3 categories depending
            on reports produced:
            </para>
            
            <list type="bullet">
            <item>
            <description><b>Analysis Task</b>
            makes an analysis and does not produce a report.
            Parameters of this task inherit from the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters"/> class.</description>
            </item>
            <item>
            <description><b>Report Task</b>
            makes an analysis and can produce a so-called standard report specific for this task.
            Parameters of this task inherit from the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters"/> class.</description>
            </item>
            <item>
            <description><b>Summary Report Task</b>
            makes an analysis and can produce one or more summary reports.
            Parameters of this task inherit from the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters"/> class.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters">
            <summary>
            The IBATaskParameters interface is implemented by Business Analyst task parameters classes.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters.TaskName">
            <summary>
            Name of a Business Analyst task associated with these parameters.
            </summary>
            <remarks>
            The task name is used as an URL suffix in execution the task.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters.ResultType">
            <summary>
            Type of a result returned by the task associated with these parameters.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters"/> class.
            </summary>
            <param name="taskName">Name of a Business Analyst task associated with these parameters.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters"/> class.
            </summary>
            <param name="taskName">Name of a Business Analyst task associated with these parameters.</param>
            <param name="outputTypes">Task output types.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <remarks>
            This method is intended for overriding in inheriting classes.
            The base method creates an instance of request variables,
            composes the "OutputType" variable in it and
            sets values of request variables for all required and optional parameters
            specified in this instance.
            </remarks>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.NeedReportOutput(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Tests that report output is required for the associated task.
            </summary>
            <remarks>
            The base implementation tests that the "OutputType" variable contains the "GetReport" option.
            </remarks>
            <param name="variables">Request variables.</param>
            <returns>True, if the report output is required.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets default output types.
            </summary>
            <remarks>
            This method is intended for overriding in inheriting classes.
            It specifies output types which should be selected in the case
            when all properties of the <c>OutputTypes</c> object are false.
            The base version doesn't set output types.
            </remarks>
            <param name="outputTypes">Output types to specify default values in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.OutputTypes">
            <summary>
            Task output types.
            </summary>
            <remarks>
            The output types specify operations that will execute in the single Web services request.
            The <c>GetFeatureClass</c> operation returns the serialized geometry and attributes of
            the output feature class in the response. The <c>GetReport</c> operation specifies
            creation of report(s) and returns links to reports in the response.
            The <c>GetMapImage</c> operation specifies
            creation of an image depicting the output feature class and returns a link
            to the image in the response.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.TaskName">
            <summary>
            Name of a Business Analyst task associated with these parameters.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BATaskParameters.ResultType">
            <summary>
            Type of a result returned by the task associated with these parameters.
            </summary>
            <remarks>
            The base implementation returns <c>BAResultType.TASK_RESULT_OUTPUT</c>.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
            <param name="outputTypes">Task output types.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <remarks>
            Method of this class verifies that the standard report options are specified
            if a report output is requested. It also specifies the "StandardReportOptions"
            request variable if a report output is requested.
            </remarks>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets default output types.
            </summary>
            <remarks>
            This method sets the <c>GetReport</c> value to true if standard reports options are specified.
            </remarks>
            <param name="outputTypes">Output types to specify default values in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.StandardReportParameters.StandardReportOptions">
            <summary>
            Standard report options.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets the GetReport option as the default output type.
            </summary>
            <param name="outputTypes">An object to set output types in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.TradeAreas">
            <summary>
            List containing one or more trade area layers to produce the benchmark report for.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.BenchmarkOptions">
            <summary>
            Benchmark area calculation method.
            <br/>Default:&#160;<c>BenchmarkOptions.useNone</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.Summarizations">
            <summary>
            List of names of variables the trade areas will be summarized by and compared with the benchmark.
            </summary>
            <remarks>
            Available summarization fields can be retrieved with 
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask"/>.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.TAinRows">
            <summary>
            Report layout options.
            The "trade areas in rows" layout is used by default.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.TALayersFields">
            <summary>
            List of names of fields of trade area layers that will appear in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.FieldSortType">
            <summary>
            Report fields sorting options.
            <br/>Default:&#160;<c>BenchmarkSortOptions.sortNone</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.SortFieldName">
            <summary>
            Name of a summarization field the sorting will be based on.
            </summary>
            <remarks>
            This property should be specified if <c>FieldSortType</c> property value
            is any except <c>BenchmarkSortOptions.sortNone</c>.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.BenchmarkLayer">
            <summary>
            Data layer used for calculating the benchmark area.
            </summary>
            <remarks>
            This property should be specified if the <c>BenchmarkOptions</c>
            property is <c>BenchmarkOptions.useOneOfTheTradeAreas</c>.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters.BenchmarkAreaOID">
            <summary>
            Object ID of area from the <c>BenchmarkLayer</c> layer to be used as a benchmark area.
            </summary>
            <remarks>
            This property should be specified if the <c>BenchmarkOptions</c>
            property is <c>BenchmarkOptions.useOneOfTheTradeAreas</c>.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask">
            <summary>
            The BAOnlineGenericTask class is responsible for executing any Business Analyst Online task.
            </summary>
            <remarks>
            The <c>ExecuteAsync</c> method of this class executes a task whose parameters implement the
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters"/> interface. Parameters of an utility task can be created
            using the static <c>CreateParameters</c> method specified within the task class.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <overloads>Asynchronous executes a Business Analyst Online generic task.</overloads>
            <summary>
            Asynchronous executes a Business Analyst Online generic task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters,System.Object)">
            <summary>
            Asynchronous executes a Business Analyst Online generic task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.CreateCommand(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask.CreateCommand(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTaskUtils.SetStoreIDField(System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
            <summary>
            Sets StoreIDField in the case when Stores parameter doesn't specified with a list of PointRecord.
            </summary>
            <param name="variables">Request variables.</param>
            <param name="obj">Parameters object.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ITokenProvider">
            <summary>
            The ITokenProvider interface is intended for implementing a provider of security token for
            access to a token-secired Web service.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ITokenProvider.UpdateTokenAsync(ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Requests a token service for getting a new security token.
            </summary>
            <remarks>
            The contract on executing this method is the following:
            If the token service fails to get a new token, the <paramref name="failed"/>
            callback method must be invoked.
            If the token service returns a new security token, the <c>CurrentToken</c>
            property should be updated with the new token value and after that the
            <paramref name="failed"/> callback method must be invoked with the new token passed in
            its parameter.
            </remarks>
            <param name="done">Update done callback method.</param>
            <param name="failed">Update failed callback method.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.ITokenProvider.CurrentToken">
            <summary>
            Current security token.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils">
            <summary>
            The BATaskUtils class provides a collection of static utility methods useful in
            task parameters classes when parameters are converted to request variables.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.EnsureMutuallyExclusive(System.Object,System.String[])">
            <summary>
            Ensures that not more than one property from the input list has a nonempty value.
            </summary>
            <remarks>
            The method especially tests String and List type properties to have nonzero length.
            </remarks>
            <param name="obj">An object to be tested.</param>
            <param name="names">Names of properties to be tested.</param>
            <returns>Zero-based index of tested property that is specified or -1 if values of all tested properties are null or empty.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.EnsureArrayOfUniqueStrings(System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Object,System.String)">
            <summary>
            Ensures that an array contains unique string values that not appeared before.
            </summary>
            <param name="allValues">A dictionary to collect unique values in.</param>
            <param name="obj">An object to get the property value from.</param>
            <param name="name">A name of property containing tested array of strings.</param>
            <returns>True if the state of <paramref name="allValues"/> array was changed (a value was added).</returns> 
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">The input array contains an empty or duplicated value.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.IsFeatureOutput(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Tests the "OutputType" variable to contain "GetFeatureClass" option.
            </summary>
            <param name="variables">Request variables.</param>
            <returns>True if "OutputType" contains "GetFeatureClass" option.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.IsReportOutput(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Tests the "OutputType" variable to contain "GetReport" option.
            </summary>
            <param name="variables">Request variables.</param>
            <returns>True if "OutputType" contains "GetReport" option.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.IsMapImageOutput(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Tests the "OutputType" variable to contain "GetMapImage" option.
            </summary>
            <param name="variables">Request variables.</param>
            <returns>True if "OutputType" contains "GetMapImage" option.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.EnsureReportOutput(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ensures that the "OutputType" variable contains the "GetReport" option.
            </summary>
            <param name="variables">Request variables.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">The "OutputType" variable doesn't contain this option.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.EnsureFeatureClassOnly(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ensures that the "OutputType" variable contains the "GetFeatureClass" option only.
            </summary>
            <remarks>
            This method does nothing, if the "OutputType" variable is missing or its value is empty.
            </remarks>
            <param name="variables">Request variables.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">The "OutputType" variable contains other options.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.EnsureReportOnly(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ensures that the "OutputType" variable contains the "GetReport" option only.
            </summary>
            <remarks>
            This method does nothing, if the "OutputType" variable is missing or its value is empty.
            </remarks>
            <param name="variables">Request variables.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">The "OutputType" variable contains other options.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetRequiredAndOptionalParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Object)">
            <summary>
            Sets required and optional parameters.
            </summary>
            <param name="variables">Request variables to set parameters for.</param>
            <param name="obj">An object to get parameters from.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetRequiredParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.Object,System.String)">
            <summary>
            Sets a required parameter with the given name.
            </summary>
            <remarks>If the parameter value is missing or empty, an exception is thrown.</remarks>
            <param name="variables">Request variables to set the parameter for.</param>
            <param name="obj">An object to get the parameter from.</param>
            <param name="name">Parameter name.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value is missing or has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetRequiredVariable(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            Sets a required variable with the given name.
            </summary>
            <remarks>If the variable value is missing or empty, an exception is thrown.</remarks>
            <param name="variables">Request variables to set variable for.</param>
            <param name="name">Variable name.</param>
            <param name="value">Variable value.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.Object,System.String)">
            <summary>
            Sets a parameter with the given name.
            </summary>
            <remarks>The parameter is set if its value is nonempty.</remarks>
            <param name="variables">Request variables to set the parameter for.</param>
            <param name="obj">An object to get the parameter from.</param>
            <param name="name">Parameter name.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetVariable(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            Sets a variable with the given name.
            </summary>
            <remarks>The variable is set if its value is nonempty.</remarks>
            <param name="variables">Request variables to set variable for.</param>
            <param name="name">Variable name.</param>
            <param name="value">Variable value.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetOptionalParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.Object,System.String,System.Object)">
            <summary>
            Sets an optional parameter with the given name and default value.
            </summary>
            <remarks>The parameter is set if its value or default value is nonempty.</remarks>
            <param name="variables">Request variables to set the parameter for.</param>
            <param name="obj">An object to get the parameter from.</param>
            <param name="name">Parameter name.</param>
            <param name="defaultValue">Default value to be used if the parameter value is empty or missing.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BATaskUtils.SetOptionalVariable(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Object,System.Object)">
            <summary>
            Sets an optional variable with the given name, value, and default value.
            </summary>
            <param name="variables">Request variables to set variable for.</param>
            <param name="name">Variable name.</param>
            <param name="value">Variable value.</param>
            <param name="defaultValue">Default value to be used if the value is empty or missing.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BARequestError">Failed to set variable because its value has no overriden
            ToString method or the ToString method failed.</exception>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters">
             <summary>
             The GeofenceInfoParameters class provides input parameters for the Geofence Info task.
             </summary>
             <remarks>
             <para>The standard geography data layer is specified by the <c>GeoLevelID</c> property value.
             The query criteria is specified by the <c>SearchString</c> property value.
             This query is performed on the name and ID attributes of every available feature in the standard geography layer.
             All available features in the specified standard geography layer are requested when no value for the
             <c>SearchString</c> property is specified.</para>
             
             <para>When specifying the request with a Business Analyst Online API user account with geofence constraints,
             the resulting features are filtered with geofence criteria.</para>
             
             <para>Output options for this task include creating a feature class for subsequent analysis
             (OutputTypes.GetFeatureClass) and rendering output image (OutputTypes.GetMapImage). If output options
             are not specified, the output will contain the StdGeographiesFeatures only.</para>  
             </remarks>
             <exampleintro>
             The code snippet below creates GeofenceInfoParameters and then executes a Geofence Info task.
             </exampleintro>
             <example>
             <code>
             GeofenceInfoParameters parameters = new GeofenceInfoParameters();
            
             parameters.GeoLevelID = "US.ZIP5";
             parameters.SearchString = "923";
             
             // Optionally set GetFeatureClass and GetMapImage to true
             parameters.OutputTypes.GetFeatureClass = true;
             parameters.OutputTypes.GetMapImage = true;
             
             geofenceInfoTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
             </code>
             </example>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters">
            <summary>
            The AnalysisParameters class is the base class for tasks producing analysis feature layers.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
            <param name="outputTypes">Task output types.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AnalysisParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <remarks>
            Method of this class validates that the output types don't contain the report output,
            because reports are not intended for use with a task whose parameters
            inherit from this class.
            </remarks>
            <returns>Request variables.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.IBAResultProcessor">
            <summary>
            The IBAResultProcessor interface is used in parameters of a Business Analyst task
            which requires an additional post-processing of the task execution result.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.IBAResultProcessor.ProcessResult(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Applies post-processing of a result received after execution a Business Analyst task.
            </summary>
            <remarks>
            The input instance of the result object is either an object decoded from JSON
            or an object already processed by a result processor registered for the given result type.
            If the result type is <c>BAResultType.SPECIAL</c>, the JSON-decoded object is
            specified in the <paramref name="requestState"/><c>.ResultObject</c> property.
            Otherwise, an object of the required result type is specified as the value of
            <paramref name="requestState"/><c>.ResultObject</c> property.
            This method should apply an additional processing of the result and update the
            <paramref name="requestState"/><c>.ResultObject</c> property.
            </remarks>
            <param name="requestState">A state associated with the request.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters"/> class.
            </summary>
            <param name="geoLevelID">The unique identifier for the standard geography level.
            The list of available geography levels could be retrieved with
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/>.</param>
            <param name="searchString">A string of characters which is used to query features of the data
            layer specified by the <paramref name="geoLevelID"/> parameter value.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.ResultType">
            <summary>
            The result is a special object of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput"/> type.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.GeoLevelID">
            <summary>
            The unique identifier for the standard geography level. 
            </summary>
            <remarks>
            The list of available geography levels could be retrieved with
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/>.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters.SearchString">
            <summary>
            A string of characters which is used to query features of the data layer specified by the GeoLevelID parameter value. 
            </summary>
            <remarks>
            A feature of the data layer is recognized as a matching feature
            if its ID or name contains the search string. If the search string is missing
            or empty, all features of the data layer are recognized as matching features.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo">
            <summary>
            The IGeographyLayerInfo interface provides properties of a geography layer.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo"/>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo.Name">
            <summary>
            Layer name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo.GeneralizationLevel">
            <summary>
            Generalization level of the layer in a geography level.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo.Scale">
            <summary>
            Maximum scale value the layer supports.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo.IDField">
            <summary>
            Name of field representing a feature ID (required).
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo.NameField">
            <summary>
            Name of field representing a feature name (optional).
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask">
             <summary>
             The Standard Geographies from Extent task requests a list of feature/area names
             and their corresponding IDs based on the result of a spatial query on a Business Analyst Online data layer.
             </summary>
             <remarks>
             <para>Features/areas in the Business Analyst Online data layers are often identified by standardized FIPS codes.
             Alternatively, they may be identified in the Business Analyst Online data layers by some other ID.
             Standard Geographies from Extent can be used to look up these IDs.</para>
            
             <para>Some applications of Standard Geographies from Extent include the following:</para>
             <list type="bullet">
             <item><description>Geographic areas of an arbitrary size or shape can be used to perform a spatial query
             of Business Analyst Online's data layers to look up the FIPS and other ID codes of the areas of interest.
             Subsequently, these codes and IDs can be used to specify these areas in other analysis tasks
             such as Summary Reports.
             </description></item>
             <item><description>The Standard geographies from Extent task can be leveraged for a quick lookup of FIPS codes
             and other IDs of named areas in a specific trade/service area.
             These named areas can be areas identified by ZIP codes, Census Tracts, County Subdivisions,
             Congressional Districts, etc. See Get Standard Geography Levels
             for the list of all Business Analyst Online geographic data layers.
             </description></item>
             </list>
             
             <para>
             The result of this task is an array of <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> items containing IDs and names of
             all of the feature/area names and their corresponding IDs that satisfy the string-based query
             on the data layer. After looking up these IDs, they may be used to specify one or more
             geographic features/areas in a Summary Reports analysis using the <see cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/>
             as the value for the Boundaries parameter.
             </para>
             </remarks>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters)">
            <overloads>Asynchronous executes a Standard Geographies from Extent task.</overloads>
            <summary>
            Asynchronous executes a Standard Geographies from Extent task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters,System.Object)">
            <summary>
            Asynchronous executes a Standard Geographies from Extent task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors">
            <summary>
            The GPResultProcessors class contains a collection of standard processors of task output results
            returned in the GP Execute syntax.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ParseUtils">
            <summary>
            The ParseUtils class contains a collection of static utility methods useful in result parsers.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.#ctor">
            <summary>
            Constructor.
            </summary>
            <exclude/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.EnsureGPResult(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Ensures that the JSON-decoded object is a GPResult object.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError">The JSON-decoded object contains a non-GPResult object.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.EnsureValidGPDataType(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType)">
            <summary>
            Ensures that the dataType property value of the specified JSON-decoded GPResult object is equal to the given GPType.
            </summary>
            <param name="decodedGPResult">A GPResult object decoded from JSON.</param>
            <param name="gpType">A GPType required.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.EnsureValidDataType(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            Ensures that the dataType property value of the specified JSON-decoded result object is equal to the given type name.
            </summary>
            <param name="decodedGPResult">A GPResult object decoded from JSON.</param>
            <param name="typeNames">Allowed type names.</param>
            <exception cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError">GPResult object has a wrong data type.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.HasProperty(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Determines if a JSON-decoded object contains nonnull property with the given name.
            </summary>
            <remarks>
            Property name is search using case-insensitive comparison.
            </remarks>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A name of property of the JSON-decoded object to be tested.</param>
            <returns>True if the object contains nonnull property with the given name.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElementAsObject(System.String,System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElementAsString(System.String,System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElementAsBoolean(System.String,System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElementAsInt32(System.String,System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElementAsDouble(System.String,System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsObject(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type (object) and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsArray(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsString(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsBoolean(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsInt32(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetPropertyAsDouble(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetElement``1(System.String,System.Collections.Generic.IList{System.Object},System.Int32,ESRI.ArcGIS.Client.BACore.Client.ParseUtils.JsonTypes)">
            <summary>
            Tests an element of a JSON-decoded array on type only and gets it.
            </summary>
            <param name="arrayName">A name which describes this array.</param>
            <param name="decodedArray">A JSON-decoded array.</param>
            <param name="elementIndex">An index to element of the JSON-decoded array to be tested and returned.</param>
            <param name="jsonType">A name of type T in terms of JSON (object, array, string ...).</param>
            <returns>Element value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetProperty``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,ESRI.ArcGIS.Client.BACore.Client.ParseUtils.JsonTypes)">
            <summary>
            Tests a property of a JSON-decoded object on existence and type and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <param name="jsonType">A name of type T in terms of JSON.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.TestAndGetProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Tests a property of a JSON-decoded object on existence and gets it.
            </summary>
            <param name="objectName">A name which describes this object.</param>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested and returned.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.GetPropertyOrNull(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Determines if a JSON-decoded object contains not null property and returns it.
            Consider case-insensitive property names.
            </summary>
            <param name="decodedObject">A JSON-decoded object.</param>
            <param name="propertyName">A property of the JSON-decoded object to be tested.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ExtractDouble(System.Object)">
            <summary>
            Extracts double from 'Number' object from JSON returned after ESRI.ArcGIS JavaScriptSerializer DeserializeObject function execution.
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType">
            <summary>
            Enumeration of supported types of standard ArcGIS GPResult objects.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPBoolean">
            <summary>
            Boolean value type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPDouble">
            <summary>
            Real value type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPLong">
            <summary>
            Integer value type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPString">
            <summary>
            String value type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPDataFile">
            <summary>
            External data type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPRasterData">
            <summary>
            External image type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPRasterDataLayer">
            <summary>
            External map image type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParseUtils.ResultType.GPFeatureRecordSetLayer">
            <summary>
            Feature record set type.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.#ctor">
            <summary>
            Constructor.
            </summary>
            <exclude/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.GetGPResults(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets an array of all objects returned by a Business Analyst task.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects.</param>
            <returns>Array of GPResult objects.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.GetSingleGPResult(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets a single result object returned by a Business Analyst task.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <returns>A GPResult object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.GetGPResultValueArray(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.Client.BAResultType[])">
            <summary>
            Gets a single result object returned by a Business Analyst task as array of values.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <param name="resultTypes">Types of the GPResult array waited (the first result type is the major type waited, other result types are alias types supported for this array).</param>
            <returns>Array of values.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessBoolean(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as a value of GPBoolean type.
            </summary>
            <param name="decodedObject">An object with Array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessString(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as a value of GPString type.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessStringArray(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as a value of GPString array.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects.</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessTaskResultOutput(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as a value of TaskResultOutput.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects.</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessIDNamePairs(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as an array of IDNamePair values.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessSummarizationInfos(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as an array of SummarizationInfo values.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessStdGeographiesFeatures(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as an array of StdGeographiesFeature values.
            </summary>
            <param name="decodedObject">An object with array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultProcessors.ProcessReportTemplateInfos(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object@)">
            <summary>
            Processes a result as an array of ReportTemplateInfo values.
            </summary>
            <param name="decodedObject">An object with Array of GPResult objects (array must have only one element).</param>
            <param name="result">A returned result.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Boundaries">
            <summary>
            The Boundaries class specifies a Business Analyst Online data layer with the polygon geometry.
            </summary>
            <remarks>
            An instance of this class can be composed of a FeatureSet (Feature Record Set) or a StandardLayer instance.
            The <c>FeatureSet</c> and <c>StandardLayer</c> properties are mutually exclusive.
            The <c>FeatureSet</c> allows a user to describe a custom area with the use of boundary coordinates.
            The <c>StandardLayer</c> allows a user to specify predefined
            standard geographies such as counties, ZIP codes, Census Tracts, etc.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.BADataLayer">
            <summary>
            The BADataLayer is the base class for polygon and point feature layers used in the
            Business Analyst Online API.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.BADataLayer.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.BADataLayer"/> class.</overloads>
            <summary>
            Initializes an empty instance of the BADataLayer class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.BADataLayer.#ctor(ESRI.ArcGIS.Client.Tasks.FeatureSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.BADataLayer"/> class by feature record set.
            </summary>
            <param name="featureSet">Feature record set.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.BADataLayer.FeatureSet">
            <summary>
            Feature record set.
            </summary>
            <remarks>
            A feature record set is a collection of geographic features with the same geometry type.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.IJsonObject">
            <summary>
            The IJsonObject interface is implemented by classes serializable to a JSON object or array.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.IJsonObject.WriteTo(ESRI.ArcGIS.Client.BACore.BAJsonWriter)">
            <summary>
            Writes the contents of this object to JSON writer.
            </summary>
            <param name="writer">JSON writer.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Boundaries"/> class.</overloads>
            <summary>
            Initializes an empty instance of the Boundaries class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.#ctor(ESRI.ArcGIS.Client.Tasks.FeatureSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Boundaries"/> class by feature record set.
            </summary>
            <param name="featureSet">Feature record set.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.#ctor(ESRI.ArcGIS.Client.BACore.StandardLayer)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Boundaries"/> class by standard layer.
            </summary>
            <param name="standardLayer">Standard layer.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.op_Implicit(ESRI.ArcGIS.Client.BACore.StandardLayer)~ESRI.ArcGIS.Client.BAO.Boundaries">
            <overloads>Implicitly converts an object to Boundaries.</overloads>
            <summary>
            Implicitly converts a StandardLayer type object to Boundaries.
            </summary>
            <param name="standardLayer">Standard layer.</param>
            <returns>Polygon data layer.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.op_Implicit(ESRI.ArcGIS.Client.Tasks.FeatureSet)~ESRI.ArcGIS.Client.BAO.Boundaries">
            <summary>
            Implicitly converts a FeatureSet type object to Boundaries.
            </summary>
            <param name="featureSet">Feature record set.</param>
            <returns>Polygon data layer.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Boundaries.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Boundaries.StandardLayer">
            <summary>
            Standard layer specifing features of an installed Business Analyst data layer.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationEventArgs">
            <summary>
            EventArgs for the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask"/><c>.ExecuteCompleted</c> event (deprecated).
            </summary>
            <remarks>
            <note>
            This class is deprecated. It is provided for compatibility with the previous version of
            the Business Analyst Online API for Silverlight. Use a result event handler with a more general version of
            event args type, for example with the <c>BATaskEventArgs&lt;string&gt;</c> type.
            </note>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationEventArgs.Token">
            <summary>The Business Analyst Online API token received from the Authentication Web Service.</summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.IClassifier">
            <summary>
            The IClassifier is an interface for data classifier.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.IClassifier.Classify(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Classifies numerical data in a number of classes.
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <returns>Classification results.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.DriveTimeUnits">
            <summary>
            Enumeration of time and distance measurement units used in Drive Time tasks.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriInches">
            <summary>
            Linear units consisting of inches.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriPoints">
            <summary>
            Linear units consisting of points.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriFeet">
            <summary>
            Linear units consisting of feet.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriYards">
            <summary>
            Linear units consisting of yards.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriMiles">
            <summary>
            Linear units consisting of miles.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriNauticalMiles">
            <summary>
            Linear units consisting of nautical miles.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriMillimeters">
            <summary>
            Linear units consisting of millimeters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriCentimeters">
            <summary>
            Linear units consisting of centimeters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriMeters">
            <summary>
            Linear units consisting of meters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriKilometers">
            <summary>
            Linear units consisting of kilometers.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriDecimalDegrees">
            <summary>
            Linear units consisting of decimal degrees.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriDecimeters">
            <summary>
            Linear units consisting of decimeters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriDriveTimeUnitsSeconds">
            <summary>
            Drive-time units consisting of seconds.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriDriveTimeUnitsMinutes">
            <summary>
            Drive-time units consisting of minutes.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.DriveTimeUnits.esriDriveTimeUnitsHours">
            <summary>
            Drive-time units consisting of hours.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.TaskError">
            <summary>
            The TaskError class represents an error object returned by a Business Analyst task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TaskError.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TaskError"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BARequestError"/> class with an empty message.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TaskError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TaskError"/> class with a specified message.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TaskError.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TaskError"/> class with a specified message and inner exception.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TaskError.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TaskError"/> class with fault properties.
            </summary>
            <param name="faultCode">Fault code.</param>
            <param name="faultString">Fault string.</param>
            <param name="details">Fault details.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TaskError.ToString">
            <summary>
            Converts this instance to string.
            </summary>
            <returns>String representation of the task error.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TaskError.FaultCode">
            <summary>
            Fault code.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TaskError.Details">
            <summary>
            Fault details.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BARequestState">
            <summary>
            The BARequestState class stores information on a request to a Business Analyst task.
            </summary>
            <remarks>
            This class is used in <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClient"/> class to pass the request state
            information to result handlers.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.RequestState">
            <summary>
            The RequestState class stores information on a request to a task.
            </summary>
            <remarks>
            This class is the base class for a request state of a task executed with the 
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient"/> class.  
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestState.#ctor(ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{ESRI.ArcGIS.Client.BACore.Client.RequestState},System.Object,System.EventHandler{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},System.EventHandler{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.RequestState"/> class.
            </summary>
            <param name="resultHandler">Result handler.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute-completed event handler.</param>
            <param name="executeFailed">Execute-failed event handler.</param>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.RequestState.ResultObject">
            <summary>
            Task result object. Continuously transformed by result parsers/processors.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestState.GetRequestUrl">
            <summary>
            Gets URL of the request which was executed.
            </summary>
            <remarks>
            This method is intended for use in event handlers to get a full URL of the request
            which was completed or failed. To get the full URL, cast the event sender parameter to the
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.RequestState"/> type.
            </remarks>
            <returns>The request URL or null if no request was executed for this state object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestState.CreateEventArgs">
            <summary>
            Creates a new instance of event args.
            </summary>
            <remarks>
            This factory method is overriden in subclasses to create a specific instance of
            event args derived from the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs"/> class.
            </remarks>
            <returns>A new instance of event args.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestState.NotifyOnResult">
            <summary>
            Dispatches a new result event on the execute-completed event handler.
            </summary>
            <remarks>
            A new instance of event args is created using the CreateEventArgs method.
            This instance of the request state is passed as the event sender.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestState.NotifyOnFault(System.Exception)">
            <summary>
            Dispatches a new fault event on the execute-failed event handler.
            </summary>
            <remarks>
            A new instance of the TaskFailedEventArgs class is created from the <paramref name="error"/>
            parameter and the <c>UserState</c> property value.
            This instance of the request state is passed as the event sender.
            </remarks>
            <param name="error">Error occured during processing request.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.UserState">
            <summary>
            A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.
            </summary>.
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.DecodedObject">
            <summary>
            JSON-decoded object from service request result.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.Timeout">
            <summary>
            The request timeout in seconds. A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>0</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.ResultHandler">
            <summary>
            Result handler.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.TokenProviderMemo">
            <summary>
            Token provider memo to save request info.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestState.Monitor">
            <summary>
            Monitor of this request.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BARequestState.#ctor(System.String,ESRI.ArcGIS.Client.BACore.Client.BAResultType,ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{ESRI.ArcGIS.Client.BACore.Client.RequestState},System.Object,System.EventHandler{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},System.EventHandler{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs},System.Type)">
            <overloads></overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BARequestState"/> class.
            </summary>
            <param name="taskName">Name of the task associated with request.</param>
            <param name="resultType">Result type of the task associated with request.</param>
            <param name="resultHandler">Handler to be executed when the task completes.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="executeFailed">Execute failed event handler.</param>
            <param name="eventArgsType">Type of event args class to be returned on result event.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BARequestState.CreateEventArgs">
            <summary>
            Creates a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/> class or its subclass.
            </summary>
            <returns>A new instance of event args.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BARequestState.TaskName">
            <summary>
            Name of the task associated with the request.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BARequestState.ResultType">
            <summary>
            Result type of the task associated with the request.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BARequestState.SpecialProcessor">
            <summary>
            Special processor for additional parsing of the result. Can be null.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BARequestState.TaskMessages">
            <summary>
            Resulting messages for this request.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BARequestState.EventArgsType">
            <summary>
            Type of event args to be created.
            </summary>
            <remarks>
            The type of event args should derive from <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClientEventArgs"/>
            and must contain a public constructor receiving an argument of this type.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters">
            <summary>
            The SummaryReportsParameters class provides input parameters for the Summary Reports task.
            </summary>
            <remarks>
            <para>Report items are usually sorted by area ID field values having the form "storeID_ringID".
            If the area ID field has a value non-confirming to this template, the <c>RingIDField</c>
            and <c>StoreIDField</c> parameters can be specified to provide the proper sorting.</para>
            
            <para>Output options for this task include creating a feature class for subsequent analysis
            (OutputTypes.GetFeatureClass), rendering output image (OutputTypes.GetMapImage), and
            creating a report (OutputTypes.GetReport). If output options
            are not specified, the report output is requested.</para>  
            </remarks>
            <exampleintro>
            The code snippet below creates SummaryReportsParameters and then executes a Summary Reports task.
            </exampleintro>
            <example>
            <code>
            SummaryReportsParameters parameters = new SummaryReportsParameters();
            
            // Boundaries could be either of type ESRI.ArcGIS.Client.Tasks.FeatureSet or ESRI.ArcGIS.Client.BACore.StandardLayer.
            parameters.Boundaries = new Boundaries(featureSet);
             
            // Set report options.
            parameters.ReportOptions = new List&lt;ReportOptions&gt;() {
                new ReportOptions("PDF", "market_profile", new ReportHeader("Custom title"))
            };
            
            // "AREA_ID" is the default value for the AreaIDField parameter.
            //parameters.AreaIDField = "AREA_ID";
            
            // GetReport is the default option for this task.
            //parameters.OutputTypes.GetReport = true;
            
            summaryReportsTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters">
            <summary>
            The SummaryReportParameters class is the base class for tasks producing summary reports.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
            <param name="outputTypes">Task output types.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <remarks>
            Method of this class verifies that the reports options are specified
            if a report output is requested. It also specifies the "ReportOptions" request
            variable if the report options are specified and the report output is requested.
            </remarks>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets default output types.
            </summary>
            <remarks>
            This method sets the <c>GetReport</c> value to true if reports options are specified.
            </remarks>
            <param name="outputTypes">Output types to specify default values in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.SummaryReportParameters.ReportOptions">
            <summary>
            List of summary report options.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets the GetReport option as the default output type.
            </summary>
            <param name="outputTypes">An object to set output types in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.Boundaries">
            <summary>
            A custom geographic region of analysis that will be used in the Summary Reports analysis.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.AreaIDField">
            <summary>
            The feature/area attribute field used to describe individual areas in the reports.
            <br/>Default:&#160;<c>"AREA_ID"</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.StoreIDField">
            <summary>
            The feature/area attribute field used to describe individual store/business/organization
            IDs in the Boundaries parameter.
            </summary>
            <remarks>
            Summary Reports associates this information with the input study areas.
            The value for the <c>Boundaries</c> parameter can optionally contain an attribute
            field that can be used to uniquely identify the store/business/organization associated
            with each area. The value for the <c>StoreIDField</c> parameter creates this association.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters.RingIDField">
            <summary>
            The feature/area attribute field used to describe individual
            areas associated with the same store/point origin.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput">
            <summary>
            The GeofenceInfoOutput class specifies results returned by a Geofence Info task.
            </summary>
            <remarks>
            An instance of this class contains an array of <see cref="T:ESRI.ArcGIS.Client.BACore.IDNamePair"/> type items.
            Additionally, it can contain a feature record set and an output map image data.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput.#ctor(System.Collections.Generic.List{ESRI.ArcGIS.Client.BACore.IDNamePair},ESRI.ArcGIS.Client.Tasks.FeatureSet,ESRI.ArcGIS.Client.MapImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput"/> class.
            </summary>
            <param name="stdGeographiesFeatures">List of feature IDs and names returned by a GeofenceInfo task.</param>
            <param name="recordSet">Feature record set returned by a Business Analyst task.</param>
            <param name="mapImage">Map image returned by a Business Analyst task.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput.RecordSet">
            <summary>
            Feature record set returned by the Geofence Info task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput.MapImage">
            <summary>
            Map image returned by the Geofence Info task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput.StdGeographiesFeatures">
            <summary>
            Array of feature IDs and names returned by the Geofence Info task.
            </summary>
            <remarks>
            If no matching features were found by the query criteria or all of the features were rejected by
            the geofence constraints, the array will be null.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification">
            <summary>
            The Classification class is the base abstract implementation of a collection of data classifiers.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.OnClassifierChanged">
            <summary>
            Dispatches the ClassifierChanged event.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.Classify(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Classifies numerical data in a number of classes.
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <returns>Classification results.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.EnsureValidData(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Ensures that the data list is specified and that the number of breaks is nonegative. 
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <exception cref="T:System.ArgumentException">Invalid input parameters.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.GetMinMaxValues(System.Collections.Generic.IEnumerable{System.Double},System.Double@,System.Double@)">
            <summary>
            Calculates minimum and maximum values in the input data list.
            </summary>
            <param name="data">Input data.</param>
            <param name="minValue">Output min value.</param>
            <param name="maxValue">Output max value.</param>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.Classification.ClassifierChanged">
            <summary>
            This event occurs when a classifier is changed.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.OutputTypes">
            <summary>
            The OutputTypes class specifies output options used in execution a Business Analyst task
            providing multiple output results.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.OutputTypes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.OutputTypes"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.OutputTypes.ToString">
            <summary>
            Serializes this instance to a semicolon-separated list.
            </summary>
            <returns>A string representation of this instance.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.OutputTypes.GetFeatureClass">
            <summary>
            A value indicating whether to output a feature class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.OutputTypes.GetMapImage">
            <summary>
            A value indicating whether to output a map image.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.OutputTypes.GetReport">
            <summary>
            A value indicating whether to output a report or a collection of reports.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.CoreUtils">
            <summary>
            Static collection of core utility methods.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.ToStringInvariant(System.Object)">
            <summary>
            Converts a value to string using the invariant culture format provider.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.NonNullString(System.String)">
            <summary>
            Returns the input value if it is nonnull or an empty string otherwise.
            </summary>
            <param name="value">A value to test.</param>
            <returns>An input value or an empty string.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.IsPositive(System.Double)">
            <summary>
            Validates that the given value is specified (not a NaN) and is positive.
            </summary>
            <param name="value">A value to be tested.</param>
            <returns>True if the value is positive.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.IsSpecified(System.Object)">
            <summary>
            Tests a value to be specified.
            </summary>
            <remarks>
            A value isn't specified if it is either null or an empty string or an empty list.
            </remarks>
            <param name="value">A value to test.</param>
            <returns>True if the value is specified.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.ToHttpsUrl(System.String)">
            <summary>
            Converts nonsecured HTTP URL to HTTPS URL.
            </summary>
            <remarks>
            If the input URL is null or its schema is not "http", the input URL is returned.
            When converted, the "http" schema name is replaced with "https", port 80 is
            replaced with 443, and port 8080 is replaced with 8443. Convertion result
            contains "https" schema, host name, port, and local path. Other components 
            of input URL are ignored.
            </remarks>
            <param name="url">Input URL or null.</param>
            <returns>HTTPS URL or an original URL if it is non-HTTP URL.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.EnsurePropertySpecified(System.Object,System.String)">
            <summary>
            Tests that a property has a specified value.
            </summary>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <exception cref="T:System.InvalidOperationException">Property value is missing or empty.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.IndexOfSpecifiedProperty(System.Object,System.String[])">
            <summary>
            Gets an index of property whose value is specified.
            </summary>
            <param name="obj">Object to get properties from.</param>
            <param name="names">List of property names to be tested.</param>
            <returns>Zero-based index of a specified property in the list, <c>-1</c> 
            (all properties are not specified),
            or <c>names.Length</c> (more than one property is specified).</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.EnsureOnePropertySpecified(System.Object,System.String[])">
            <overloads>Tests properties to be mutually exclusive.</overloads>
            <summary>
            Tests properties to be mutually exclusive.
            </summary>
            <param name="obj">Object to get properties from.</param>
            <param name="names">List of property names to be tested.</param>
            <returns>Zero-based index of specified property in the list.</returns>
            <exception cref="T:System.InvalidOperationException">All tested properties are missing or more
            than one property is specified.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.EnsureOnePropertySpecified(System.Object,System.Boolean,System.String[])">
            <summary>
            Tests properties to be mutually exclusive.
            </summary>
            <param name="obj">Object to get properties from.</param>
            <param name="allowMissing">If true, the case of all missing properties is allowed.</param>
            <param name="names">List of property names to be tested.</param>
            <returns>Zero-based index of specified property in the list or <c>-1</c> 
            (all properties are not specified).</returns>
            <exception cref="T:System.InvalidOperationException">All tested properties are missing or more
            than one property is specified.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.GetPropertyValue(System.Object,System.String)">
            <overloads>Gets a value of property.</overloads>
            <summary>
            Gets a value of property.
            </summary>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.GetPropertyValue(System.Object,System.String,System.Boolean)">
            <summary>
            Gets a value of property.
            </summary>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <param name="ignoreCase">If true, the property is requested in ignore case mode.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.GetPropertyInfo(System.Object,System.String,System.Boolean)">
            <summary>
            Gets property info.
            </summary>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <param name="ignoreCase">If true, the property is requested in ignore case mode.</param>
            <returns>Property info.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.TryGetPropertyValue``1(System.Object,System.String,``0@)">
            <overloads>Tries to get a value of property.</overloads>
            <summary>
            Tries to get a value of property.
            </summary>
            <typeparam name="T">Property type waited.</typeparam>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <param name="value">Output value. It receives an object property value or the default value for this type.</param>
            <returns>True if the given object has the given property of the given type or derived type.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.CoreUtils.TryGetPropertyValue``1(System.Object,System.String,System.Boolean,``0@)">
            <summary>
            Tries to get a value of property.
            </summary>
            <typeparam name="T">Property type waited.</typeparam>
            <param name="obj">Object to get property from.</param>
            <param name="name">Property name.</param>
            <param name="ignoreCase">If true, the property is requested in ignore case mode.</param>
            <param name="value">Output value. It receives an object property value or the default value for this type.</param>
            <returns>True if the given object has the given property of the given type or derived type.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters">
            <summary>
            The SimpleRingsParameters class provides input parameters for the Simple Rings task.
            </summary>
            <remarks>
            Output options for this task include creating a feature class for subsequent analysis
            (OutputTypes.GetFeatureClass), rendering an output image (OutputTypes.GetMapImage), and
            creating a report (OutputTypes.GetReport). 
            If no output options are specified, the required output options are specified as follows.
            If the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> parameter is specified, the report output is requested.
            Otherwise, the feature class output is requested.
            </remarks>
            <exampleintro>
            The code snippet below creates SimpleRingsParameters and then executes a Simple Rings task.
            </exampleintro>
            <example>
            <code>
            SimpleRingsParameters parameters = new SimpleRingsParameters();
            
            // Stores is a PointLayer that could take either data as type 
            // ESRI.ArcGIS.Client.Tasks.FeatureSet or an array of ESRI.ArcGIS.Client.BACore.PointRecord types, e.g.
            //List&lt;PointRecord&gt; points = new List&lt;PointRecord&gt;() {
            //    new PointRecord("store_1", "Store 1", "1", 34.052074, -117.207841)
            //};
            parameters.Stores = new PointLayer(points);
            
            // esriUnits.esriMiles is the default value for DistanceUnits.
            parameters.DistanceUnits = esriUnits.esriMiles;
            
            parameters.Radii = new List&lt;double&gt;() { 1, 3, 5 };
            
            // false is the default value for Donut.
            //parameters.Donut = false;
            
            // STORE_ID is the default value for StoreIDField.
            //parameters.StoreIDField = "STORE_ID";
            
            // Set report options.
            ReportOptions reportOptions = new ReportOptions("PDF", "market_profile");
            reportOptions.Header = new ReportHeader("1-3-5 Mile Ring Study Areas");
            parameters.ReportOptions = new &lt;ReportOptions&gt;() { reportOptions };
            
            simpleRingsTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets the GetReport output type if the ReportOptions parameter contains report options;
            otherwise, sets the GetFeatureClass output type.
            </summary>
            <param name="outputTypes">An object to set output types in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.Stores">
            <summary>
            A point layer containing point features such as businesses, hospitals, schools, etc.,
            which represent the locations from which the Drive Time trade/service areas will originate
            </summary>
            <remarks>
            In situations where the input <c>Stores</c> parameter does not contain a field named "STORE_ID"
            (case insensitive), specification of the <c>StoreIDField</c> parameter is required so the
            analyses can be properly executed.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.Radii">
            <summary>
            A list of ring radius lengths in the units specified in the DistanceUnits parameter. 
            This parameter expects one or more non-negative numerical values.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.DistanceUnits">
            <summary>
            The distance units of the Radii parameter which is used to calculate the ring-based trade/service areas.
            <br/>Default:&#160;<c>esriUnits.esriMiles</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.StoreIDField">
            <summary>
            The attribute field name in the input Stores parameter which is associated with 
            unique store/business IDs (typically store numbers for retail establishments with 
            multiple locations). The default value is 'STOREID'.
            </summary>
            <remarks>
            The <c>StoreIDField</c> property should be specified when
            specifying a FeatureSet for the <c>Stores</c> property.
            This attribute must be available in the features contained in the specified
            FeatureSet in order to uniquely identify locations.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters.Donut">
            <summary>
            Whether to create non-overlapping donut-style Simple Rings trade/service area bands
            instead of overlapping areas that all originate from the store/point origins.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema">
            <summary>
            The ColorRampSchema is a collection of color gradients matching a single color ramp.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema.#ctor(System.String,System.Collections.Generic.List{System.Collections.Generic.List{System.Windows.Media.Color}})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema"/> class.
            </summary>
            <param name="name">Color ramp name.</param>
            <param name="colorRampsColors">List of predefined color gradients.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema.GetRampColors(System.Int32)">
            <summary>
            Gets a new collection of ramp colors.
            </summary>
            <remarks>
            If this color ramp schema is simple (consists of a unique gradient specified by two colors),
            ramp colors are calculated using mid values of ramp intervals. Otherwise, the best matching
            gradient is selected whose number of color equals to <paramref name="colorsCount"/>.
            If an appropriated gradient is not found, the ramp colors are rendered
            using edge values of ramp intervals for predefined colors of a color gradient with the nearest
            number of colors.
            </remarks>
            <param name="colorsCount">A number of colors required.</param>
            <returns>A list containing the required number of colors.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema.LoadColorRampSchemas(System.Xml.Linq.XDocument)">
            <summary>
            Loads a collection of color ramp schemas from XML.
            </summary>
            <param name="xml">XML containing schemas.</param>
            <returns>List of schemas.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema.ColorFromHexCode(System.String)">
            <summary>
            Creates a color from hexadecimal string value.
            </summary>
            <param name="hexCode">Hexadecimal string value in the form "0xRRGGBB" or "#RRGGBB".</param>
            <returns>A new instance of color.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema.Name">
            <summary>
            Color ramp name.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute">
            <summary>
            The ParameterAttribute class marks parameters of tasks to be serialized to request variables.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute"/> class of the special type.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute.#ctor(ESRI.ArcGIS.Client.BACore.Client.ParameterType)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute"/> class of the given type.
            </summary>
            <param name="type">Parameter type.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute.Type">
            <summary>
            Parameter type.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.ParameterAttribute.Name">
            <summary>
            Request variable name.
            </summary>
            <remarks>
            If Name is missing (null or empty), property name is used as the request variable name.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ParameterType">
            <summary>
            Enumeration of parameter types.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParameterType.Special">
            <summary>
            A special parameter. It is serialized to request parameters depending on values of other parameters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParameterType.Optional">
            <summary>
            An optional parameter. It is automatically serialized to request parameters when specified.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.ParameterType.Required">
            <summary>
            A required parameter. It is tested to be specified and is automatically serialized to request parameters. 
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BAResponseError">
            <summary>
            An exception of this type is thrown in the response handler of a Business Analyst client
            if there were errors while response parsing.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAResponseError.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError"/> class with an empty message.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAResponseError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError"/> class with a specified message.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAResponseError.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAResponseError"/> class with a specified message and inner exception.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BAClient">
            <summary>
            The base class for Business Analyst Clients.
            </summary>
            <remarks>
            An instance of this class decodes the result from JSON string and
            provides additional conversion of the result to an object of a specific type
            applying a result processor registered for the result type requested. After that
            a result handler function of the calling Business Analyst task can do additional
            transformations of the result object before returning it to a client.
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BATask`2"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient">
            <summary>
            The Base abstract HTTP client wrapper class.
            </summary>
            <remarks>
            An abstract client encapsulates an instance of the HTTPService
            and sends requests to it in the text mode. It is supposed that the result is returned as a
            JSON string.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient"/> class.
            </summary>
            <param name="url">The base URL of the client (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient"/> class.
            </summary>
            <param name="url">The base URL of the client (can be null).</param>
            <param name="forcePost">Whether to force the POST method or not.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.Send(System.String,System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Sends a request to HTTP service.
            </summary>
            <param name="urlSuffix">Request URL suffix.</param>
            <param name="urlVariables">Request variables.</param>
            <param name="requestState">Request state.</param>
            <returns>Monitor of this request.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.PrepareVariables(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Prepares URL variables.
            </summary>
            <remarks>
            This method is intended for final modification of URL variables before passing them to HTTP Service.
            The base method does nothing.
            </remarks>
            <param name="urlVariables">Request variables.</param>
            <param name="requestState">Request state.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.IsTokenExpired(ESRI.ArcGIS.Client.BACore.Client.TaskError)">
            <summary>
            Tests that the fault reason is the expired or invalid or absent security token.
            </summary>
            <remarks>
            The base method returns false.
            </remarks>
            <param name="error">Task error.</param>
            <returns>True if the fault reason is the expired or invalid or absent security token.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.PrepareUrl(System.String,System.String)">
            <summary>
            Prepares HTTP request URL combining it from a base URL and a suffix using the CombineUrl method.
            </summary>
            <param name="baseUrl">Base URL.</param>
            <param name="urlSuffix">URL suffix (can be null).</param>
            <returns>Combined URL.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.ProcessResult(ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Processes the decoded object for the given request.
            </summary>
            <remarks>
            The input decoded object is assigned to the <c>requestState.DecodedObject</c> property.
            The output result object should be assigned to the <c>requestState.ResultObject</c> property.
            A task result handler is specified with the <c>requestState.ResultHandler</c> property.
            </remarks>
            <param name="requestState">Request state associated with the request.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.DecodeResult(System.String)">
            <summary>
            Decodes a result string to a JSON object.
            </summary>
            <remarks>
            The base implementation decodes the result as JSON object using ArcGIS JavaScriptSerializer.
            </remarks>
            <param name="result">Result string received from HTTP service.</param>
            <returns>The decoded JSON object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.CombineUrl(System.String,System.String)">
            <summary>
            Combines a base URL with a suffix.
            </summary>
            <remarks>
            If the URL suffix is a valid HTTP or HTTPS URL, it is returned.
            If the base URL is empty, URL suffix is returned. In this case, it must be a valid HTTP URL.
            If the base URL ends with URL suffix in ignore case mode, the matching end part of the base URL
            is replaced with the URL suffix.   
            In other cases, the URL is combined from the base URL and from the URL suffix using slash separator '/'.
            </remarks>
            <param name="baseUrl">Base URL.</param>
            <param name="urlSuffix">URL suffix (can be null).</param>
            <returns>Combined URL.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.TryUpdateToken(ESRI.ArcGIS.Client.BACore.Client.TaskError,ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Try update token if error due to its expiration.
            </summary>
            <param name="error">Error object.</param>
            <param name="requestState">Request state associated with the request.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.DisableClientCaching">
            <summary>
            If true, adds a timestamp parameter ("_ts") to the REST request to prevent the request from
            being loaded from the browser's cache.
            </summary>
            <remarks>Default: false.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.ProxyUrl">
            <summary>
            The URL to proxy the request through.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.TokenProvider">
            <summary>
            Provider responsible for updating the security token if the last one expires.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.Token">
            <summary>
            Token for accessing a secure HTTP client.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.Url">
            <summary>
            Base URL of the task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.RequestTimeout">
            <summary>
            The request timeout in seconds. A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>0</c>.
            </summary>
            <remarks>
            The value of this variable is used as an initial value for the <c>RequestTimeout</c>
            property of a task when it is created.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AbstractClient.ParserDelegate">
            <summary>
            Result parser function.
            </summary>
            <param name="decodedObject">JSON object to parse.</param>
            <param name="result">Result of parsing.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClient"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClient"/> class with "no force POST" and "use GP Execute" options.
            </summary>
            <param name="url">The base URL of the client (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAClient"/> class.
            </summary>
            <param name="url">The base URL of the client (can be null).</param>
            <param name="forcePost">Whether to force the POST method or not.</param>
            <param name="useGpExecute">Whether to add "execute" to the end of task URL suffix or not.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.AddResultProcessor(ESRI.ArcGIS.Client.BACore.Client.BAResultType,ESRI.ArcGIS.Client.BACore.Client.AbstractClient.ParserDelegate)">
            <summary>
            Registers a processor of a result which will convert a JSON decoded object
            to an object of the specified type.
            </summary>
            <param name="resultType">A result type the result processor will be registered for.</param>
            <param name="parserDelegate">A result processor function.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.PrepareUrl(System.String,System.String)">
            <summary>
            Prepares HTTP request URL combining it from a base URL and a suffix.
            </summary>
            <remarks>
            Before combining base URL and URL suffix, the suffix is modified with PrepareUrlSuffix method.
            </remarks>
            <param name="baseUrl">Base URL.</param>
            <param name="urlSuffix">URL suffix.</param>
            <returns>Combined URL.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.PrepareUrlSuffix(System.String)">
            <summary>
            Prepares task URL suffix.
            </summary>
            <remarks>
            This method appends the URL suffix with "/execute" string if the client was constructed
            with true value of the <c>useGpExecute</c> parameter.
            </remarks>
            <param name="urlSuffix">Task URL suffix to change.</param>
            <returns>The updated URL suffix.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.PrepareVariables(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Sets "json" value for "f" variable.
            </summary>
            <param name="urlVariables">Request variables.</param>
            <param name="requestState">Request state.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.ProcessResult(ESRI.ArcGIS.Client.BACore.Client.RequestState)">
            <summary>
            Processes the JSON decoded object for the given request.
            </summary>
            <param name="requestState">Request state associated with the request.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAClient.ProcessMessages(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Process the decoded object to get warnings of the current request.
            </summary>
            <param name="baRequestState">Request state associated with the request.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder">
            <summary>
            The AsyncResponder class provides asynchronous callbacks on result and fault.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.IResponder">
            <summary>
            The IResponder interface provides asunchronous callback functions on result and fault.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.IResponder.Result(ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs)">
            <summary>
            Invokes the result callback function.
            </summary>
            <param name="result">Result event arguments.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.IResponder.Fault(ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs)">
            <summary>
            Invokes the fault callback function.
            </summary>
            <param name="fault">Fault event arguments.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.#ctor(ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs})">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder"/> class with common callback functions.
            </summary>
            <param name="result">Result callback function (can be null).</param>
            <param name="fault">Fault callback function (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.#ctor(ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Object},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder"/> class with simple callback functions.
            </summary>
            <param name="done">Execution done callback function receiving a result object (can be null).</param>
            <param name="failed">Execution failed callback function receiving an error object (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.#ctor(ESRI.ArcGIS.Client.BACore.Client.AsyncStateCallback{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},ESRI.ArcGIS.Client.BACore.Client.AsyncStateCallback{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder"/> class with user state callback functions.
            </summary>
            <param name="resultState">Result callback function with a user state (can be null).</param>
            <param name="faultState">Fault callback function with a user state (can be null).</param>
            <param name="userState">User state object.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.Result(ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs)">
            <summary>
            Invokes the result callback function.
            </summary>
            <param name="result">Result event arguments.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.Fault(ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs)">
            <summary>
            Invokes the fault callback function.
            </summary>
            <param name="fault">Fault event arguments.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.HandleResult(System.Object,ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs)">
            <summary>
            Tests the <c>e.UserState</c> object to be <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> and invokes
            its Result method.
            </summary>
            <remarks>
            On successful invoking, The <c>e.userState</c> object is updated with the event sender object.
            </remarks>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.AsyncResponder.HandleFault(System.Object,ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs)">
            <summary>
            Tests the <c>e.UserState</c> object to be <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> and invokes
            its Fault method.
            </summary>
            <remarks>
            On successful invoking, The <c>e.userState</c> object is updated with the event sender object.
            </remarks>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AsyncCallback`1">
            <summary>
            Asynchronous callback delegate.
            </summary>
            <typeparam name="T">Parameter type.</typeparam>
            <param name="parameter">Parameter.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.AsyncStateCallback`1">
            <summary>
            Asynchronous callback delegate with a user state.
            </summary>
            <typeparam name="T">Parameter type.</typeparam>
            <param name="parameter">Parameter.</param>
            <param name="userState">User state.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask">
            <summary>
            The ThematicMappingQueryTask class implements the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.IQueryTask"/> facade for
            a task executing a thematic mapping query.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.IQueryTask">
            <summary>
            The IQueryTask interface is a facade for a thematic mapping query task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.IQueryTask.InitializeAsync(ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Initializes the query task.
            </summary>
            <remarks>
            An instance of the <c>BATaskEventArgs&lt;List&lt;GeographyLevelInfo&gt;&gt;</c> type should be
            passed to the <c>responder.Result</c> method.
            </remarks>
            <param name="responder">Async responder to handle initialization results.</param>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.IQueryTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo,ESRI.ArcGIS.Client.Tasks.Query,ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Executes a query for the given geography layer.
            </summary>
            <remarks>
            <para>The query task should at first validate the geography layer. If this is an alien layer,
            the false value should be returned. Otherwise, the query task should start executing query
            and should return the true value.</para>
            
            <para>An instance of the <c>BATaskEventArgs&lt;FeatureSet&gt;</c> type should be
            passed to the <c>responder.Result</c> method.</para>
            </remarks>
            <param name="layerInfo">A geography layer to execute query on.</param>
            <param name="query">A query to execute.</param>
            <param name="responder">Async responder to handle query results.</param>
            <returns>True if the query task is started.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.InitializeAsync(ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Initializes the query task.
            </summary>
            <param name="responder">Async responder to handle initialization results.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo,ESRI.ArcGIS.Client.Tasks.Query,ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Executes the given query for the given layer if the layer is owned by this task.
            </summary>
            <remarks>
            <para>
            This task is an owner of layers that were returned by the <c>InitializeAsync</c> method
            inside geography levels and it is also an owner of copies of these layers created with the
            <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo"/>.<c>CreateCopy</c> method.
            </para>
            <para>
            Before executing the query, the method tests that this task owns the given geography layer.
            If not, the query task doesn't executed.
            </para>
            </remarks>
            <param name="layerInfo">A geography layer to execute query on.</param>
            <param name="query">A query to execute.</param>
            <param name="responder">Async responder to handle query results.</param>
            <returns>True if the query task is started.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.DisableClientCaching">
            <summary>
            If true, adds a timestamp parameter ("_ts") to the REST request to prevent the request from
            being loaded from the browser's cache.
            <br/>Default:&#160;<c>false</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.ProxyUrl">
            <summary>
            The URL to proxy the request through.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.AuthenticationUrl">
            <summary>
            The base URL to the Business Analyst Online authentication services.
            </summary>
            <remarks>
            This URL uses the HTTPS protocol contrary to the base URL to ordinary Business Analyst Online tasks
            using the HTTP protocol. Usually, it is not necessary to specify this URL manually because it is calculated
            by default using other available URLs. If the <c>TokenProvider</c> is specified and is the
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider"/>, its URL is used as this URL. Otherwise the <c>Url</c> property
            value converted to HTTPS URL using the <see cref="T:ESRI.ArcGIS.Client.BACore.CoreUtils"/>.<c>ToHttpsUrl</c> method is returned.
            Manual setting a value for the <c>AuthenticationUrl</c> property overrides default calculations.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.RequestTimeout">
            <summary>
            The request timeout in seconds. A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>0</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.Token">
            <summary>
            Token for accessing a secure task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.Url">
            <summary>
            URL of the task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.TokenProvider">
            <summary>
            Provider responsible for updating the security token if the last one expires.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingQueryTask.Summarizations">
            <summary>
            Summarization fields available for the current account.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ValueFormatter">
            <summary>
            The ValueFormatter class provides the default implementation of <see cref="T:ESRI.ArcGIS.Client.BACore.IValueFormatter"/> interface.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.IValueFormatter">
            <summary>
            The IValueFormatter interface provides method for formatting a numeric value.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.IValueFormatter.FormatValue(System.Double,System.Int32)">
            <summary>
            Converts a numeric value to a string representation with the required number of digits after the decimal point.
            </summary>
            <param name="value">A numeric value to be converted.</param>
            <param name="decimals">The number of significant digits after the decimal point.
            Negative value means unknown number of digits.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.IValueFormatter.FormatValueWithUnits(System.Double,System.Int32,ESRI.ArcGIS.Client.BACore.BAValueType)">
            <summary>
            Converts a numeric value to a string representation with the required number of digits after the decimal point
            provided with units if necessary.
            </summary>
            <param name="value">A numeric value to be converted.</param>
            <param name="decimals">The number of significant digits after the decimal point.
            Negative value means unknown number of digits.</param>
            <param name="valueType">Type of value.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ValueFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ValueFormatter"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ValueFormatter.FormatValue(System.Double,System.Int32)">
            <summary>
            Converts a numeric value to a string representation with the required number of digits after the decimal point.
            </summary>
            <param name="value">A numeric value to be converted.</param>
            <param name="decimals">The number of significant digits after the decimal point.
            Negative value means unknown number of digits.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ValueFormatter.FormatValueWithUnits(System.Double,System.Int32,ESRI.ArcGIS.Client.BACore.BAValueType)">
            <summary>
            Converts a numeric value to a string representation with the required number of digits after the decimal point
            provided with units if necessary.
            </summary>
            <remarks>The base version formats the value using the <c>FormatValue</c> method and after that adds units
            if necessary using the <c>FormatUnits</c> function associated with this formatter.
            </remarks>
            <param name="value">A numeric value to be converted.</param>
            <param name="decimals">The number of significant digits after the decimal point.
            Negative value means unknown number of digits.</param>
            <param name="valueType">Type of value.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ValueFormatter.FormatUnits">
            <summary>
            A function providing units for a formatted value.
            </summary>
            <remarks>
            <para>The signature of this function is the following:</para>
            <para>string FormatUnits(string formattedValue, ValueType valueType);</para>
            <para>It can add units to a formatted value and return the resulting string. For example, if the 
            <c>valueType</c> is <see cref="T:ESRI.ArcGIS.Client.BACore.BAValueType"/><c>.Percent</c>, this function can append the percent sign
            to the input <c>formattedValue</c>. If units are missing for the given value type, the function should
            return the input <c>formattedValue</c>.</para>
            <para>If this function is null, units are not added to a value formatted with the
            <c>FormatValueWithUnits</c> method.</para>
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification">
            <summary>
            The TMClassification class provides a collection of quantile and equal-intervals classifiers used in Thematic Mapping.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.Classify(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Classifies numerical data in a number of classes.
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <returns>Classification results.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.ClassificationType">
            <summary>
            Classification type.
            <br/>Default:&#160;<c>ClassificationType.Quantile</c>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.QuantileClassifier">
            <summary>
            The quantile classifier distributes a set of values into groups that contain an equal number of values.
            </summary>
            <remarks>
            This classifier places the same number of data values in each class
            and will never have empty classes or classes with too few or
            too many values. It is attractive in that this method
            always produces distinct map patterns.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.QuantileClassifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.QuantileClassifier"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.QuantileClassifier.Classify(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Classifies numerical data in a number of classes using equal number of values.
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <returns>Classification results.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.EqualIntervalsClassifier">
            <summary>
            The equal-intervals classifier divides a set of values into groups that contain an equal range of values.
            </summary>
            <remarks>
            This classifier better communicates with continuous set of data.
            The map designed by using equal interval classification is easy to accomplish and read.
            It however is not good for clustered data because you might get the map with many
            features in one or two classes and some classes with no features because of clustered data.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.EqualIntervalsClassifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.EqualIntervalsClassifier"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification.EqualIntervalsClassifier.Classify(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Classifies numerical data in a number of classes using equal ranges of values.
            </summary>
            <param name="data">Input data.</param>
            <param name="numBreaks">Number of required class breaks.</param>
            <returns>Classification results.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassificationType">
            <summary>
            Enumeration of classification types used in the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification"/> class.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassificationType.EqualIntervals">
            <summary>
            Equal intervals classification type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassificationType.Quantile">
            <summary>
            Quantile classification type.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.PointRecord">
            <summary>
            The PointRecord class specifies properties of a geographic point.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.PointRecord.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.PointRecord"/> class.</overloads>
            <summary>
            Initializes an empty instance of the PointRecord class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.PointRecord.#ctor(System.String,System.String,System.String,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.PointRecord"/> class.
            </summary>
            <param name="name">Point name. It is stored in the "NAME" field of a geocoded point feature.</param>
            <param name="description">Point description string. It is stored in the "DESCR" field
            of a geocoded point feature.</param>
            <param name="storeId">ID of store associated with this point or ID of this point if this is the store point.
            It is stored in the "STORE_ID" field of a geocoded point feature.</param>
            <param name="latitude">Latitude coordinate. It is stored in the "Latitude" field of a geocoded point feature.</param>
            <param name="longitude">Longitude coordinate. It is stored in the "Longitude" field of a geocoded point feature.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.PointRecord.#ctor(System.String,System.String,System.String,System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.PointRecord"/> class.
            </summary>
            <param name="name">Point name. It is stored in the "NAME" field of a geocoded point feature.</param>
            <param name="description">Point description string. It is stored in the "DESCR" field
            of a geocoded point feature.</param>
            <param name="storeId">ID of store associated with this point or ID of this point if this is the store point.
            It is stored in the "STORE_ID" field of a geocoded point feature.</param>
            <param name="latitude">Latitude coordinate. It is stored in the "Latitude" field of a geocoded point feature.</param>
            <param name="longitude">Longitude coordinate. It is stored in the "Longitude" field of a geocoded point feature.</param>
            <param name="storeAddress">Store address. It is stored in the "STORE_ADDR" field of a geocoded point feature.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.Name">
            <summary>
            Point name (optional).
            </summary>
            <remarks>
            It is stored in the "NAME" field of a geocoded point feature.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.Description">
            <summary>
            Point description string (optional).
            </summary>
            <remarks>
            It is stored in the "DESCR" field of a geocoded point feature.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.StoreID">
            <summary>
            ID of store associated with this point or ID of this point if this is the store point.
            </summary>
            <remarks>
            It is stored in the "STORE_ID" field of a geocoded point feature.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.Latitude">
            <summary>
            Latitude coordinate.
            </summary>
            <remarks>
            It is stored in the "Latitude" field of a geocoded point feature.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.Longitude">
            <summary>
            Longitude coordinate.
            </summary>
            <remarks>
            It is stored in the "Longitude" field of a geocoded point feature.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.PointRecord.StoreAddress">
            <summary>
            Store address (optional).
            </summary>
            <remarks>
            <para>This property can specify a store address associated with this point.
            It is stored in the "STORE_ADDR" field of a geocoded point feature.</para>
            <para>This property is available with Business Analyst Server.</para>
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsEventArgs">
            <summary>
            EventArgs for the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/><c>.ExecuteCompleted</c> event (deprecated).
            </summary>
            <remarks>
            <note>
            This class is deprecated. It is provided for compatibility with the previous version of
            the Business Analyst Online API for Silverlight. Use a result event handler with a more general version of
            EventArgs type, for example with the <c>BATaskEventArgs&lt;TaskResultOutput&gt;</c> type.
            </note>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsEventArgs.TaskResultOutput">
            <summary>
            The TaskResultOutput returned by the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask">
            <summary>
            The AuthenticationTask class is used to get a string-based response containing a short-lived token.
            </summary>
            <remarks>
            The authentication token, while valid, may be used in the <c>Token</c> property of
            Business Analist Online tasks.
            </remarks>
            <exampleintro>
            The code snippet below executes an Authentication task.
            </exampleintro>
            <example>				
            <code>
            AuthenticationTask task = new AuthenticationTask();
            
            // "https://baoapi.esri.com" is the default value for the AuthenticationTask url.
            //task.url = "https://baoapi.esri.com";
            
            task.ExecuteAsync(username, password, new AsyncResponder(resultHandler, faultHandler));
            </code> 
            </example>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask"/> class.
            </summary>
            <remarks>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>https://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Server host name and port, respectively.</para>
            <para>If the base URL is null or empty, the "https://baoapi.esri.com" value is assigned as the base URL.</para>
            </remarks>
            <param name="url">The URL to the ArcGIS REST Token Service associated with the Business Analyst Server.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.ExecuteAsync(System.String,System.String)">
            <overloads>Asynchronous executes a Business Analyst Online authentication task.</overloads>
            <summary>
            Asynchronous executes a Business Analyst Online authentication task.
            </summary>
            <param name="userName">Business Analyst Online API username.</param>
            <param name="password">Associated password.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.ExecuteAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronous executes a Business Analyst Server authentication task.
            </summary>
            <remarks>
            <para>
            A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.
            </para>
            <para>
            The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>Token</c> property of this task.
            </para>
            </remarks>
            <param name="userName">Business Analyst Online API username.</param>
            <param name="password">Associated password.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.ExecuteCompleted">
            <summary>
            This event occurs when the ExecuteAsync operation completes.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.Failed">
            <summary>
            This event occurs when the ExecuteAsync operation failes.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.Client">
            <summary>
            Authentication client.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.AuthenticationTask.Token">
            <summary>
            Authentication token received at the last execution of this task.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient">
            <summary>
            The BAOnlineClient class is the client class encapsulating a Business Analyst Online HTTP (REST) Service.
            </summary>
            <exampleintro>
            The code snippet below shows how to create an instance of this class.
            To get the example working, specify valid values for username, password and the URLs.
            </exampleintro>
            <example>
            <code>
            BAOnlineClient client = new BAOnlineClient("http://baoapi.esri.com");
            
            // Token provider updates a security token when it expires.
            BAOnlineTokenProvider tokenProvider = new BAOnlineTokenProvider(new UserCredentials("username", "password"));
            tokenProvider.Url = "https://baoapi.esri.com";
            client.TokenProvider = tokenProvider;
            </code>
            </example> 
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> class with the default URL.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> class with the given URL.
            </summary>
            <remarks>If the base URL is null or empty, the "http://baoapi.esri.com" value is assigned as the base URL.</remarks>
            <param name="url">Base URL to the Business Analyst Online HTTP Service.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient.op_Implicit(System.String)~ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient">
            <summary>
            Implicitly casts a string value to a new BAOnlineClient instance.
            </summary>
            <param name="url">Base URL to the Business Analyst Online Web Service.</param>
            <returns>A new instance of the BAOnlineClient class whose <c>Url</c> is set to the given value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient.PrepareUrl(System.String,System.String)">
            <summary>
            Prepares Business Analyst Online HTTP request URL.
            </summary>
            <param name="baseUrl">Base URL.</param>
            <param name="urlSuffix">URL suffix.</param>
            <returns>Full task URL.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient.IsTokenExpired(ESRI.ArcGIS.Client.BACore.Client.TaskError)">
            <summary>
            Recognizes the "token expired" error.
            </summary>
            <param name="error">Task error.</param>
            <returns>True, if this is an error associated with an expired, invalid, or missing token.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.ReportHeader">
            <summary>
            The ReportHeader class specifies custom report header options available
            in the Business Analyst Online API.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BAReportHeader">
            <summary>
            The BAReportHeader class is the base class for a report header used in ReportOptions.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAReportHeader.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAReportHeader"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAReportHeader"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAReportHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAReportHeader"/> class with the given subtitle.
            </summary>
            <param name="subtitle">Report subtitle (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAReportHeader.ToDictionary">
            <summary>
            Converts all specified report header options to a dictionary. 
            </summary>
            <returns>Dictionary of report header options.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAReportHeader.AddOption(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Adds an option to the dictionary if this option is specified.
            </summary>
            <remarks>
            A property with the given name is tested and, if its string value is
            specified and nonempty, a key/value object is added to the dictionary under the given key.
            While mapping a property to a key/value object its key is converted to lower case.
            </remarks>
            <param name="dictionary">Collection of key/value objects to add the option to.</param>
            <param name="name">Property name.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.BAReportHeader.Subtitle">
            <summary>
            Report subtitle.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.BAReportHeader.CustomHeaders">
            <summary>
            Custom report header options.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.ReportHeader.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.ReportHeader"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.ReportHeader"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.ReportHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of ReportHeader class.
            </summary>
            <param name="subtitle">Report subtitle.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.ReportHeader.ToDictionary">
            <summary>
            Converts all specified report header options to a dictionary. 
            </summary>
            <returns>Dictionary of report header options.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.Address1">
            <summary>
            First line of address field in a report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.Address2">
            <summary>
            Second line of address field in a report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.BinaryLogo">
            <summary>
            Custom logo graphic specified as array of bytes.
            </summary>
            <remarks>
            Custom report headers can include a custom logo graphic. A 200 X 200-pixel GIF
            image is recommended for the logo graphic. The logo graphic can be specified as an
            array of bytes (<c>BinaryLogo</c>) or a complete URL reference to an image
            (<c>CustomLogo</c>). The <c>BinaryLogo</c> and <c>CustomLogo</c>
            properties are mutually exclusive.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.CustomLogo">
            <summary>
            Custom logo specified as a complete URL reference.
            </summary>
            <remarks>
            Custom report headers can include a custom logo graphic. A 200 X 200-pixel GIF
            image is recommended for the logo graphic. The logo graphic can be specified as an
            array of bytes (<c>BinaryLogo</c>) or a complete URL reference to an image
            (<c>CustomLogo</c>). The <c>BinaryLogo</c> and <c>CustomLogo</c>
            properties are mutually exclusive.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.LatitudeName">
            <summary>
            Custom name of the report latitude field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.LatitudeValue">
            <summary>
            Value assigned to the report latitude field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.LongitudeName">
            <summary>
            Custom name of the report longitude field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.LongitudeValue">
            <summary>
            Value assigned to the report longitude field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.LocationName">
            <summary>
            Custom location name in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.SiteType">
            <summary>
            Custom site type field name in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.SiteTypeValue">
            <summary>
            Custom value assigned to the site type field in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.SiteUnitsName">
            <summary>
            Custom site units field name in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.SiteUnitsValue">
            <summary>
            Custom value assigned to the site units field in the report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.ReportHeader.StandardGeographyValue">
            <summary>
            Custom value assigned to the standard geography field in the report.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations">
            <summary>
            The TMSummarizations class provides a work with summarization variables.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.SummarizationInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations"/> class.
            </summary>
            <param name="summarizations">A list of available summarizations.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.GetSummarization(System.String)">
            <summary>
            Gets summarization variable metadata by variable name.
            </summary>
            <param name="name">Summarization variable name.</param>
            <returns>Summarization variable metadata or null if a summarization with the given
            <paramref name="name"/> is absent in the list of available summarizations.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.CreateValueCalculator(System.String)">
            <summary>
            Creates a new value calculator for the given summarization variable.
            </summary>
            <param name="name">Summarization variable name.</param>
            <returns>Value calculator.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.PercentValueDecimals">
            <summary>
            The number of significant digits after the decimal point for percentage value.
            <br/>Default:&#160;<c>4</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.AverageValueDecimals">
            <summary>
            The number of significant digits after the decimal point for average value.
            <br/>Default:&#160;<c>2</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.IndexValueDecimals">
            <summary>
            The number of significant digits after the decimal point for index value.
            <br/>Default:&#160;<c>0</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.ValueFormatter">
            <summary>
            Formatter to be used for formatting values.
            </summary>
            <remarks>
            If the formatter doesn't specified, the default formatting will be provided using
            the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.ValueFormatter"/> class.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.Count">
            <summary>
            Number of summarization variables.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.Item(System.Int32)">
            <summary>
            Gets summarization variable metadata by variable index.
            </summary>
            <param name="index">Zero-based index of the variable.</param>
            <returns>Summarization variable metadata.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations.UseGivenSummarizationsOnly">
            <summary>
            True value means that available value calculation types for a value calculator
            are restricted to the given summarization fields.
            <br/>Default:&#160;<c>false</c>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp">
            <summary>
            The TMColorRamp class provides an implementation of ColorRamp based on ColorRampSchema.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp">
            <summary>
            The ColorRamp class defines and handles color ramp for thematic mapping.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.OnRampColorsChanged">
            <summary>
            Dispatches the <c>RampColorsChanged</c> event.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.UpdateColorRamp(System.Int32)">
            <summary>
            Updates the color ramp with the given number of colors.
            </summary>
            <remarks>
            Use the <c>RampColorsCount</c> setter instead of this method.
            </remarks>
            <param name="colorsCount">The numbers of colors (should be positive).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.GetColorByValue(System.Double)">
            <summary>
            Gets a gradient color by value in the range [0, 1].
            </summary>
            <remarks>
            <para>The color for the given <paramref name="value"/> is calculated
            using a linear gradient interpolation between discrete colors of the color ramp
            posed at the nodes <c>x<sub>i</sub>=i/(rampColorsCount-1)</c>.</para>
            <para>
            The input <paramref name="value"/> should belong to [0, 1].
            If the <paramref name="value"/> is negative, the first color is returned.
            If the <paramref name="value"/> is greater that 1, the last color is returned.
            </para>
            </remarks>
            <param name="value">A value between 0 and 1 specifying a position of color in the color ramp gradient.</param>
            <returns>Required color.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.GetColorByIndex(System.Int32)">
            <summary>
            Gets a discrete color by index.
            </summary>
            <param name="index">Zero-based index of color in the discrete color ramp.</param>
            <returns>Required color.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.MixColors(System.Windows.Media.Color,System.Windows.Media.Color,System.Double)">
            <summary>
            Mixes two colors using linear interpolation.
            </summary>
            <remarks>
            <para>Channels of colors are mixed by the formula:</para>
            <para><c>mixedColor.X = color1.X*(1-value) + color2.X*value.</c></para>
            </remarks>
            <param name="color1">The first color.</param>
            <param name="color2">The second color.</param>
            <param name="value">A value in the range from 0 to 1 specifying a proportion to mix colors with.</param>
            <returns>Mixed color.</returns>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.RampColorsChanged">
            <summary>
            Occurs when the discrete colors of this color ramp are changed.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.RampColorsCountChanged">
            <summary>
            Occurs when the number of discrete colors of this color ramp is changed.
            </summary>
            <remarks>This event doesn't used now and will be removed.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRamp.RampColorsCount">
            <summary>
            The current number of ramp colors.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp.#ctor(ESRI.ArcGIS.Client.BACore.ThematicMapping.ColorRampSchema,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp"/> class.
            </summary>
            <param name="schema">Color ramp schema.</param>
            <param name="colorsCount">The numbers of colors (should be positive).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp.GetColorByIndex(System.Int32)">
            <summary>
            Gets a discrete color by index.
            </summary>
            <remarks>
            If the <paramref name="index"/> is negative, the first color is returned.
            If the <paramref name="index"/> is greater or equal to <c>RampColorsCount</c>,
            the last color is returned.
            </remarks>
            <param name="index">Zero-based index of color in the discrete color ramp.</param>
            <returns>Required color.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp.ColorRampSchema">
            <summary>
            Color ramp schema.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp.RampColorsCount">
            <summary>
            The current number of discrete colors specified in this color ramp (it is always positive).
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo">
            <summary>
            The ValueInfo class encapsulates a numeric value and a value format.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo.#ctor(System.Double,System.Int32,ESRI.ArcGIS.Client.BACore.BAValueType,ESRI.ArcGIS.Client.BACore.IValueFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo"/> class.
            </summary>
            <param name="value">Numeric value.</param>
            <param name="decimals">The number of significant digits after the decimal point.
            Negative value means unknown number of digits.</param>
            <param name="valueType">The type of value to be formatted.</param>
            <param name="formatter">Formatter to be used to format the value.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo.ToString">
            <summary>
            Converts the encapsulated Value to a string representation applying the given Format.
            </summary>
            <returns>String representation of the value.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo.Value">
            <summary>
            Numeric value.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueInfo.Format">
            <summary>
            Value format.
            </summary>
            <remarks>The format is created with <c>FormatWithUnits=true</c> mode.</remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels">
            <summary>
            The GeographyLevels class provides a read-only collection of geography levels.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels"/> class.
            </summary>
            <param name="levels">A collection of geography levels.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels.GetLevelByName(System.String)">
            <summary>
            Gets a geography level by name.
            </summary>
            <param name="name">Geography level name.</param>
            <returns>Required geography level or null.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels.Count">
            <summary>
            Number of geography levels.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevels.Item(System.Int32)">
            <summary>
            Gets a geography level by index.
            </summary>
            <param name="index">Zero-based index of the geography level.</param>
            <returns>Required geography level.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo">
            <summary>
            The ReportTemplateInfo class contains information about a report template
            including its title, category, output formats, and name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo"/> class.
            </summary>
            <param name="name">Report template name.</param>
            <param name="category">Report category.</param>
            <param name="title">Report title.</param>
            <param name="formats">Supported report formats.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo.Name">
            <summary>
            Report name associated with this template.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo.Category">
            <summary>
            Report category associated with this template.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo.Title">
            <summary>
            Report title associated with this template.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo.Formats">
            <summary>
            Report formats available for this template.
            </summary>
            <remarks>
            This property is used in Business Analyst Online API only.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.IAuthentication">
            <summary>
            The IAuthentication interfaces provides user credentials for authentication.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.IAuthentication.GetUserCredentials(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Collections.Generic.Dictionary{System.String,System.String}},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Gets user credentials.
            </summary>
            <remarks>
            The input <paramref name="userInfo"/> object can specify additional information
            such as a token service URL, client ID, and timeout. The implementation of this
            method must transfer all parameters of the userInfo object to the parameters of the
            userCredentials object returned with the <paramref name="done"/> callback.
            Some parameters can be changed and authentication parameters
            should be added.
            </remarks>
            <param name="userInfo">Additional user info parameters.</param>
            <param name="done">Authentication done callback function.</param>
            <param name="failed">Authentication failed callback function.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator">
            <summary>
            The TMValueCalculator class provides calculation of a value of feature for thematic shading using one of
            calculation methods specified with the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType"/> enumeration.
            </summary>
            <remarks>
            Allowed calculation methods depend on fields specified in a constructor of this class.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator">
            <summary>
            The ValueCalculator class is the base abstract class providing calculation a value of feature
            for thematic shading.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.OnCalculationMethodChanged">
            <summary>
            Dispatches the CalculationMethodChanged event.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.CreateTMValueFormat(System.Boolean)">
            <summary>
            Creates a format for formatting the thematic value.
            </summary>
            <param name="formatWithUnits">True value means formatting with units.</param>
            <returns>A new value format.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.GetSummarizationFields">
            <summary>
            Gets a list of names of summarization fields which are required for value calculation.
            </summary>
            <returns>The list of required summarization fields.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.Calculate(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider)">
            <summary>
            Calculates a value to thematically shade the given feature by.
            </summary>
            <param name="attributes">Attributes of a feature.</param>
            <param name="provider">Provider of thematic mapping attributes.</param>
            <returns>The value calculated.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.CreateDescriptionFields(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider,ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates a list of fields describing value calculation properties.
            </summary>
            <remarks>
            The table below shows the avaiability and precedence of the description fields which appear
            in the output list depending on the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle"/> used.
            Overrides in derived classes add more description fields to the output.
            <table>
            <tr>
            <th>Field</th> <th>None</th> <th>Simple</th> <th>Short</th> <th>Long</th>
            </tr>
            <tr>
            <td><c>"ID"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"Name"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"Value"</c></td> <td>no</td> <td>yes</td> <td>yes</td> <td>yes</td>
            </tr>
            </table> 
            </remarks>
            <param name="attributes">Attributes of feature to get values from.</param>
            <param name="descriptionStyle">Value description style.</param>
            <param name="provider">Provider of thematic mapping attributes (can be null).</param>
            <returns>A new list of description fields.</returns>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.CreateBaseDescriptionFields(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider,ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates base description fields for a graphic feature.
            </summary>
            <remarks>
            The table below shows the avaiability and precedence of the description fields which appear
            in the output list depending on the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle"/> used.
            <table>
            <tr>
            <th>Field</th> <th>None</th> <th>Simple</th> <th>Short</th> <th>Long</th>
            </tr>
            <tr>
            <td><c>"ID"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"Name"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            </table> 
            </remarks>
            <param name="attributes">Attributes of feature to get values from.</param>
            <param name="provider">Provider of thematic mapping attributes (can be null).</param>
            <param name="descriptionStyle">Value description style.</param>
            <returns>A new list of feature description fields.</returns>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.CalculationMethodChanged">
            <summary>
            This event occurs when the method of value calculation is changed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.Decimals">
            <summary>
            The number of significant digits after the decimal point for a value calculated by this calculator.
            </summary>
            <remarks>Negative value means unknown number of significant digits.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.ValueType">
            <summary>
            The type of the current thematic value.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator.Formatter">
            <summary>
            Value formatter to be used to format values.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.#ctor(System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/> class with a single field.
            </summary>
            <remarks>
            This constructor allows the <c>TMValueType.Number</c> calculation method.
            </remarks>
            <param name="baseFieldName">Name of the base field.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.#ctor(ESRI.ArcGIS.Client.BACore.ThematicMapping.TMSummarizations,System.String,System.String,System.String,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/> class.
            </summary>
            <remarks>
            The <paramref name="percentageFieldName"/> and <paramref name="averageBaseFieldName"/> parameters are
            mutually exclusive. Only one of them can be specified.
            </remarks>
            <param name="summarizations">Available summarization variables.</param>
            <param name="baseFieldName">Name of the base field.</param>
            <param name="percentageFieldName">Name of the field to calculate percentage by.</param>
            <param name="averageBaseFieldName">Name of the field to calculate average by.</param>
            <param name="indexBase">Base value for index calculation.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.GetSummarizationFields">
            <summary>
            Gets a list of names of summarization fields which are required for value calculation.
            </summary>
            <returns>The list of required summarization fields.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.IsEnabledTMValueType(ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType)">
            <summary>
            Tests this calculator to support the given summarization type.
            </summary>
            <param name="type">Summarization type requested.</param>
            <returns>True if this summarization type is allowed.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.Calculate(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider)">
            <summary>
            Calculates a value to thematically shade the given feature by.
            </summary>
            <param name="attributes">Attributes of a feature.</param>
            <param name="provider">Provider of thematic mapping attributes.</param>
            <returns>The value calculated.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.CreateDescriptionFields(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider,ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates a list of fields describing value calculation properties.
            </summary>
            <remarks>
            The table below shows the avaiability and precedence of the description fields which appear
            in the output list depending on the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle"/> used. The percentage, average-base and
            index-base description fields are appended to the output list if they are used in calculation
            of the thematic mapping value.
            <table>
            <tr>
            <th>Field</th> <th>None</th> <th>Simple</th> <th>Short</th> <th>Long</th>
            </tr>
            <tr>
            <td><c>"ID"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"Name"</c></td> <td>no</td> <td>no</td> <td>yes</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"Value"</c></td> <td>no</td> <td>yes</td> <td>yes</td> <td>yes</td> 
            </tr>
            <tr>
            <td><c>"TMValueType"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes</td> 
            </tr>
            <tr>
            <td><c>"TMVarID"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"TMVarName"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"TMVarValue"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes</td>
            </tr>
            <tr>
            <td><c>"PercentageVarID"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"PercentageVarName"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"PercentageVarValue"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"AverageBaseVarID"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"AverageBaseVarName"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"AverageBaseVarValue"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            <tr>
            <td><c>"IndexBaseValue"</c></td> <td>no</td> <td>no</td> <td>no</td> <td>yes?</td>
            </tr>
            </table> 
            </remarks>
            <param name="attributes">Attributes of feature to get values from.</param>
            <param name="descriptionStyle">Value description style.</param>
            <param name="provider">Provider of thematic mapping attributes (can be null).</param>
            <returns>A new list of description fields.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.Decimals">
            <summary>
            The number of significant digits after the decimal point for a value calculated by this calculator.
            </summary>
            <remarks>Negative value means unknown number of significant digits.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.ValueType">
            <summary>
            The type of the current thematic value.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.BaseFieldName">
            <summary>
            Name of the base field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.BaseFieldAlias">
            <summary>
            Alias name of the base field.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.PercentageFieldName">
            <summary>
            Name of the field to calculate percentage by.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.PercentageFieldAlias">
            <summary>
            Alias name of the field to calculate percentage by.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.AverageBaseFieldAlias">
            <summary>
            Alias name of the field to calculate average by.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.IndexBase">
            <summary>
            Base value for index calculation.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator.ValueCalculationType">
            <summary>
            Current value-calculation method.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType">
            <summary>
            Enumeration of thematic value calculation methods.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType.Number">
            <summary>
            Calculate a value. This method is always allowed.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType.Percentage">
            <summary>
            Calculate a percentage value. This method is allowed if a percentage field is specified.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType.Average">
            <summary>
            Calculate an average value. This method is allowed if an average-base field is specified.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueType.Index">
            <summary>
            Calculate an index value. This method is allowed if an index-base value is specified.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.TokenProvider">
            <summary>
            The TokenProvider class provides an abstract implementation of <see cref="T:ESRI.ArcGIS.Client.BACore.Client.ITokenProvider"/> interface
            based on an authentication task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.IAuthentication)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TokenProvider"/> class.
            </summary>
            <param name="authentication">An object used for getting user credentials.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.UpdateTokenAsync(ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Requests an authentication service for getting a new security token.
            </summary>
            <param name="done">Update done callback method.</param>
            <param name="failed">Update failed callback method.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.ExecuteAsync(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Executes the authentication task.
            </summary>
            <param name="userCredentials">User credentials.</param>
            <param name="done">Update done callback method.</param>
            <param name="failed">Update failed callback method.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.PopulateUserInfo(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This hook is applied just before requesting user credentials to prepare
            parameters of the <paramref name="userInfo"/> object to be passed to the
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IAuthentication"/> type instance.
            </summary>
            <param name="userInfo">User Info dictionary. Its "url" key contains the authentication task base URL value.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.AuthenticationTask">
            <summary>
            Authentication task associated with this token provider.  
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.Url">
            <summary>
            Authentication service URL.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TokenProvider.CurrentToken">
            <summary>
            Current authentication token. 
            </summary>
            <remarks>
            This property is the proxy to the authentication task <c>Token</c> property.
            In an authentication task, the <c>Token</c> property is not passed to an
            authentication service. Instead of this, the <c>Token</c> property is used
            as a storage for the current token. When the authentication task
            successfully executes the authentication method, it must update its
            <c>Token</c> property with the new value of token.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BARequestError">
            <summary>
            An exception of this type is thrown in the <c>ExecuteAsunc</c> method of a Business Analyst task
            if task parameters are incorrect.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BARequestError.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BARequestError"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BARequestError"/> class with an empty message.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BARequestError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BARequestError"/> class with a specified message.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BARequestError.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BARequestError"/> class with a specified message and inner exception.
            </summary>
            <param name="message">String that contains the message that describes the error.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask">
            <summary>
            The Get Standard Geography Levels task  requests a list of available Business Analyst Online data layers
            corresponding to different standardized geography levels.
            </summary>
            <remarks>
            <para>The result of this task is an array of <see cref="T:ESRI.ArcGIS.Client.BACore.IDNamePair"/> objects which will contain the data layer IDs
            and their corresponding names. The IDs and names of data layers for such standardized geography levels as U.S.
            states, counties, Core Based Statistical Areas (CBSAs), Designated Market Areas (DMAs), cities, ZIP codes,
            Congressional Districts, Census tracts, and Census block groups are returned.</para>
            
            <para>The IDs of geography levels can be used to specify data layers in other analysis.</para>
            </remarks>
            <exampleintro>
            The code snippet below executes a Get Standard Geography Levels task.
            </exampleintro>
            <example>
            <code>
            getStandardGeographyLevelsTask.ExecuteAsync(new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Boundaries"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.ExecuteAsync">
            <overloads>Asynchronous executes a Get Standard Geography Levels task.</overloads>
            <summary>
            Asynchronous executes a Get Standard Geography Levels task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.ExecuteAsync(System.Object)">
            <summary>
            Asynchronous executes a Get Standard Geography Levels task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.CreateCommand">
            <overloads>Creates a new command encapsulating this task.</overloads>
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.CreateCommand(System.String)">
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask.CreateParameters">
            <summary>
            Creates parameters of this task to execute it with a generic or batch task.
            </summary>
            <returns>Parameters of this task.</returns>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask">
             <summary>
             The Return Standard Geography task returns IDs and names of features from specified geography
             levels that match the given location.
             </summary>
             <remarks>
             <para>This task searches the given standard geography levels for features matching the given location.
             Only one feature is selected from matching features for every level of geometry. If no matching
             feature was found for a level of geometry, the value in the corresponding position of the output
             array will be a pair of empty FeatureID and FeatureName strings.</para>
             
             <para>For example, you can identify standard geography units such as ZIP, Track, or Block Group which
             contain the given point on the map. A point can be specified in a number of waysâ€”using
             its geographical coordinates, postal address, or ZIP code.</para>
            
             <para>The result of this task is a list of <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> items containing IDs and names of
             features of geography levels matching the given location.</para>
             </remarks>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters)">
            <overloads>Asynchronous executes a Return Standard Geography task.</overloads>
            <summary>
            Asynchronous executes a Return Standard Geography task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters,System.Object)">
            <summary>
            Asynchronous executes a Return Standard Geography task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters">
            <summary>
            The ReturnStdGeographyParameters class provides input parameters for the 
            Return Standard Geography task.
            </summary>
            <remarks>
            <para>The <c>GeoLevelIDs</c> parameter specifies IDs of the standard geography levels
            to search geography features in.</para>
            
            <para>The location point can be specified in one of three waysâ€”by postal address,
            by geographic coordinates, and by ZIP code. All these ways are mutually exclusive.</para>
            
            <para>The <c>Address</c> parameter specifies postal address fields.</para>
            <para>The <c>Coordinates</c> array contains geographic coordinates of the point
            (latitude and longitude).</para>
            <para>The <c>ZIP</c> parameter specifies the location ZIP code. The centroid point of the given ZIP is used.</para>
            </remarks>
            <exampleintro>
            The code snippet below creates ReturnStdGeographyParameters and then executes a
            Return Standard Geography task.
            </exampleintro>
            <example>
            <code>			
            ReturnStdGeographyParameters parameters = new ReturnStdGeographyParameters();
            
            // Multiple standard geography layers can be specified in this array.
            parameters.GeoLevelIDs = new List&lt;string&gt;(){"US.Counties","US.States"};
            
            // One and only one of the three locations need be specified - address, coordinates or zip. 
            parameters.Address = new List&lt;string&gt;(){"380 New York St.", "Redlands", "CA"};
            //parameters.Coordinates = new List&lt;double&gt;(){mapPoint.x, mapPoint.y};
            //parameters.ZIP = "92373";
             
            returnStdGeographyTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters">
            <summary>
            The BAUtilityParameters class is the base class for parameters of Business Analyst tasks producing
            a simple output.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.Client.BAResultType)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
            <param name="resultType">Task result type.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters.#ctor(System.String,ESRI.ArcGIS.Client.BACore.Client.BAResultType,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters"/> class.
            </summary>
            <param name="taskName">Task name.</param>
            <param name="resultType">Task result type.</param>
            <param name="stringParameters">Additional string parameters.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <remarks>
            This method is intended for overriding in inheriting classes.
            The base method creates an instance of request variables,
            sets values for additional string parameters specified in the constructor, and
            sets values for all required and optional parameters specified in this instance.
            </remarks>
            <returns>Request variables.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters.TaskName">
            <summary>
            Name of a Business Analyst task associated with these parameters.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BAUtilityParameters.ResultType">
            <summary>
            Type of a result returned by the task associated with these parameters.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.GeoLevelIDs">
            <summary>
            A list containing IDs of standard geography levels to find geography features in.
            </summary>
            <remarks>
            A list of available geography levels could be retrieved with 
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/>.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.Address">
            <summary>
            Postal address fields of the location requested.
            </summary>
            <remarks>
            <para>This list should contain fields of the postal address, for example</para>
            <para><c>new List&lt;string&gt;() {"380 New York St.", "Redlands", "CA"}</c></para>
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.Coordinates">
            <summary>
            Geographic coordinates of the location requested.
            </summary>
            <remarks>
            This list should contain two values specifying at first the
            longitude (x) coordinate and then the latitude (y) coordinate of the point.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.ReturnStdGeographyParameters.ZIP">
            <summary>
            ZIP code of the location requested. The centroid point of the requested ZIP area is used.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.StandardLayer">
            <summary>
            The StandardLayer class is used to reference an installed Business Analyst data layer.
            </summary>
            <remarks>
            <para>
            The <c>GeographyLevel</c> property is used to specify a standard
            Business Analyst data layer. Filtering for specific
            records is supported with the <c>GeographyIDs</c> property
            or <c>Query</c> property; however, they cannot be specified as both.
            In Business Analyst Online API, the <c>Query</c> property is temporary not supported.
            </para>
            <para>
            Most use cases involve the retrieval of areas associated with an installed geography level. For 
            the default Business Analyst dataset, this includes geography levels such as Census Block 
            groups, Census Tracts, and U.S. ZIP codes. In many cases, queries involve the use of standardized 
            FIPS codes.
            </para>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.StandardLayer.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/> class.</overloads>
            <summary>
            Initializes an empty instance of the StandardLayer class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.StandardLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/> class.
            </summary>
            <param name="id">ID of a standard geography level.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.StandardLayer.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StandardLayer"/> class.
            </summary>
            <param name="id">ID of a standard geography level.</param>
            <param name="geographyIDs">Array of IDs of features requested from the geography level.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.StandardLayer.GeographyLevel">
            <summary>
            ID of a standard geography level.
            </summary>
            <remarks>
            An array of available geography levels could be retrieved with the
            Get Standard Geography Levels task.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.StandardLayer.GeographyIDs">
            <summary>
            Geography IDs requested from the geography level.
            </summary>
            <remarks>
            If this list is empty and Query string is missing or empty, all features from a
            geography level are requested.
            This array could be composed from <c>IDNamePair.ID</c> property values returned
            by standard geographies features lookup utilities.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.StandardLayer.Query">
            <summary>
            A query string specifying an SQL query to be used in the WHERE clause.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature">
            <summary>
            The StdGeographiesFeature represents attributes of a feature of a standard geography level.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.IDNamePair">
            <summary>
            The IDNamePair class represents a pair of ID and Name properties.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.IDNamePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.IDNamePair"/> class.
            </summary>
            <param name="id">ID value.</param>
            <param name="name">Name value.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.IDNamePair.ID">
            <summary>
            ID value.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.IDNamePair.Name">
            <summary>
            Name value.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature.#ctor(System.String,System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> class.
            </summary>
            <param name="id">ID value.</param>
            <param name="name">Name value.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature"/> class.
            </summary>
            <param name="id">ID value.</param>
            <param name="name">Name value.</param>
            <param name="stateAbbreviation">State abbreviation.</param>
            <param name="stateName">State name.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature.StateAbbreviation">
            <summary>
            State abbreviation (optional).
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.StdGeographiesFeature.StateName">
            <summary>
            State name (optional).
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.TokenProviderMemo">
            <summary>
            The TokenProviderMemo class stores request parameters to re-execute a task after updating
            an authentication token.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.TokenProviderMemo.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.TokenProviderMemo"/> class.
            </summary>
            <param name="urlSuffix">Request URL suffix.</param>
            <param name="urlVariables">Request variables.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TokenProviderMemo.UrlSuffix">
            <summary>
            Request URL suffix.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.TokenProviderMemo.UrlVariables">
            <summary>
            Request variables.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.RequestMonitor">
            <summary>
            The RequestMonitor class monitors the execution state of an asynchronously executed Web request.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.RequestMonitor.CancelAsync">
            <summary>
            Asynchronously cancels the request executed.
            </summary>
            <remarks>
            If the request is executing, it is aborted without notification.
            If the request is not executing, this method does nothing.
            </remarks>
            <returns>True if the request was aborted.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.RequestMonitor.IsBusy">
            <summary>
            Is the request executing or not.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BAJsonWriter">
            <summary>
            The BAJsonWriter class provides conversion of objects to JSON string.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAJsonWriter"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAJsonWriter"/> class with JSON output.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.BAJsonWriter"/> class with Pretty JSON output.
            </summary>
            <param name="indent">Indentation pattern (if null, JSON output is applied).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.Clear">
            <summary>
            Clears writer.
            </summary>
            <remarks>
            This method can be applied when the writer state is "outside of object",
            i.e. when writing the JSON object was completed. After clean up, the writer can be reused
            for preparing another JSON object.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteBeginObject">
            <summary>
            Writes the begin-object tag.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteBeginArray">
            <summary>
            Writes the begin-array tag.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteEndObject">
            <summary>
            Writes the end-object tag.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteEndArray">
            <summary>
            Writes the end-array tag.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteProperty(System.String,System.Object)">
            <summary>
            Writes a property.
            </summary>
            <remarks>
            This method sequentially invokes <c>WriteName</c> and <c>WriteValue</c> methods.
            </remarks>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteName(System.String)">
            <summary>
            Writes a property name.
            </summary>
            <param name="name">Property name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteValue(System.Object)">
            <overloads>Writes a value.</overloads>
            <summary>
            Writes a value.
            </summary>
            <remarks>
            The type of <paramref name="value"/> is recognized and this value is properly converted to JSON.
            If the value type implements the <see cref="T:ESRI.ArcGIS.Client.BACore.IJsonObject"/> interface, its <c>WriteTo</c> method
            is invoked. Otherwise, the following types are recognized and especially converted:
            unknown type (null reference), Boolean, DateTime, and a numeric type. 
            Values of two complex types are especially
            recognizedâ€”<c>IDictionary&lt;string,object&gt;</c> and <c>IList&lt;object&gt;</c>.
            The first one is converted to a JSON object containing properties specified in the dictionary
            and the last one is converted to a JSON array.
            A value of another type is converted to string and then it is written as quoted string value
            with special characters encoded.
            </remarks>
            <param name="value">Array entry value or object property value.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteValue(System.Object,System.Boolean)">
            <summary>
            Writes a value.
            </summary>
            <remarks>
            <para>If <paramref name="asIs"/> parameter is true, the value of object is converted to string using 
            the invariant culture format provider and then it is written to the internal string builder as is.</para>
            <para>
            If <paramref name="asIs"/> parameter is false,
            the type of <paramref name="value"/> is recognized and this value is properly converted to JSON.
            If the value type implements the <see cref="T:ESRI.ArcGIS.Client.BACore.IJsonObject"/> interface, its WriteTo method
            is invoked. Otherwise, the following types are recognized and especially converted:
            unknown type (null reference), Boolean, DateType, and a numeric type. 
            Values of two complex types are especially
            recognizedâ€”<c>IDictionary&lt;string,object&gt;</c> and <c>IList&lt;object&gt;</c>.
            The first one is converted to a JSON object containing properties specified in the dictionary
            and the last one is converted to a JSON array.
            A value of another type is converted to string and then it is written as quoted string value
            with special characters encoded.
            </para>
            </remarks>
            <param name="value">Array entry value or object property value.</param>
            <param name="asIs">If true, the value will be written as is.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.ToString">
            <summary>
            Gets the string representation of completed JSON object.
            </summary>
            <remarks>
            This method should be invoked when the JSON object is completed.
            </remarks>
            <returns>String representation of JSON object.</returns>
            <exception cref="T:System.InvalidOperationException">Missing or incomplete JSON object.</exception>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.ToJson(ESRI.ArcGIS.Client.BACore.IJsonObject)">
            <summary>
            Converts an object to JSON string.
            </summary>
            <param name="obj">An object to be converted.</param>
            <returns>JSON representation of object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.IsJsonType(System.Type)">
            <summary>
            Tests if an instance of the given type is writable as JSON object.
            </summary>
            <remarks>
            The type is writable as JSON object if it implements the <see cref="T:ESRI.ArcGIS.Client.BACore.IJsonObject"/>
            or <c>IDictionary&lt;string,object&gt;</c> or <c>IList&lt;object&gt;</c> interface.
            </remarks>
            <param name="type">Type to be tested.</param>
            <returns>True if an instance of this type is writable as JSON object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.BAJsonWriter.WriteObject(System.Object)">
            <summary>
            Writes an object.
            </summary>
            <remarks>
            <para>The method converts the <paramref name="value"/> to JSON as follows.
            If the value type implements the <see cref="T:ESRI.ArcGIS.Client.BACore.IJsonObject"/> interface, its <c>WriteTo</c> method
            is invoked. Otherwise, the following types are recognized and especially converted:
            unknown type (null reference), Boolean, DateTime, and a numeric type. 
            Values of two complex types are especially
            recognizedâ€”<c>IDictionary&lt;string,object&gt;</c> and <c>IList&lt;object&gt;</c>.
            The first one is converted to a JSON object containing properties specified in the dictionary
            and the last one is converted to a JSON array.
            A value of another type is converted to string and then it is written as quoted string value
            with special characters encoded.</para>
            </remarks>
            <para>
            This method can be overriden in subclasses in order to recognize additional types
            of objects and write them accordingly.
            </para>
            <param name="value">An object to be written.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.BAJsonWriter.PrettyNewLine">
            <summary>
            Specifies how to place an open tag of a JSON object or array in pretty mode: on a new line or not.
            </summary>
            <remarks>
            This property controls the behavior of writing an open tag after property name only.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask">
            <summary>
            The Get Summarizations task requests a list of all summarization fields available
            for Business Analyst Online tasks.
            </summary>
            <remarks>
            The result of this task is an array of <see cref="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo"/> objects providing metainformation
            about summariation fields. The summarization field names may be used
            in parameters of reports such as the Benchmark Report.
            </remarks>
            <exampleintro>
            The code snippet below executes a Get Summarizations task.
            </exampleintro>
            <example>
            <code>
            getSummarizationsTask.ExecuteAsync(new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.ExecuteAsync">
            <overloads>Asynchronous executes a Get Summarizations task.</overloads>
            <summary>
            Asynchronous executes a Get Summarizations task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.ExecuteAsync(System.Object)">
            <summary>
            Asynchronous executes a Get Summarizations task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.CreateCommand">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.CreateCommand(System.String)">
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetSummarizationsTask.CreateParameters">
            <summary>
            Creates parameters of this task to execute it with a generic or batch task.
            </summary>
            <returns>Parameters of this task.</returns>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask">
            <summary>
            The BAOnlineBatchTask class is responsible for executing a sequence of Business Analyst Online tasks.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters)">
            <overloads>Asynchronous executes a Business Analyst Online batch task.</overloads>
            <summary>
            Asynchronous executes a Business Analyst Online batch task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.ExecuteAsync(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters,System.Object)">
            <summary>
            Asynchronous executes a Business Analyst Online batch task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.CreateCommand(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.CreateCommand(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask.RequestTimeout">
            <summary>
            The request timeout in seconds to be set for every subtask of the batch task.
            A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>Client.Timeout</c>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer">
            <summary>
            The TMLayer class is the base class for thematic mapping layers.
            </summary>
            <remarks>
            Its QueryTask property is abstract and should be implemented in derived classes.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer"/> class.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.WhereProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.Where"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ClassificationProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.Classification"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ColorRampProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ColorRamp"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.NumBreaksProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.NumBreaks"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ValueCalculatorProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ValueCalculator"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AnalysisExtentProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AnalysisExtent"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.IntersectAnalysisExtentWithMapExtentProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.IntersectAnalysisExtentWithMapExtent"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.SpatialRelationshipProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.SpatialRelationship"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderThickness"/> dependency property.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AutoUpdateProperty">
            <summary>
            Identifies the <see cref="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AutoUpdate"/> dependency property.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.InitializeQueryTask(ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Initializes the query task associated with this layer.
            </summary>
            <remarks>
            <para>
            The responder can customize the result list of <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo"/> items.
            While customization, some geography levels can be removed or reorganized. Their collection of layers
            can also be updated using data returned with this collection.
            </para>
            <para>
            If more than one query task is specified for this layer, all of them are initialized
            and their result lists are merged into one list which is passed to the <c>responder.Result</c> method.
            </para>
            </remarks>
            <param name="responder">Async responder to handle initialization results.</param>
            <returns>True if the initializing has started.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ExecuteQueryTask(ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo,ESRI.ArcGIS.Client.Tasks.Query,ESRI.ArcGIS.Client.BACore.Client.IResponder)">
            <summary>
            Executes a query for the given geography layer.
            </summary>
            <param name="layerInfo">A geography layer to execute query on.</param>
            <param name="query">A query to execute.</param>
            <param name="responder">Async responder to handle query results.</param>
            <returns>True if the executing has started.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.PrepareQuery">
            <summary>
            Prepares base query parameters.
            </summary>
            <remarks>
            This method populates the <c>SpatialRelationship</c>, <c>Geometry</c>, and
            <c>OutSpatialReference</c> parameters of a new query with currently selected values
            for this thematic mapping layer.
            </remarks>
            <returns>A new query.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BeginUpdate">
            <summary>
            Marks the beginning of updates.
            </summary>
            <remarks>
            This method is deprecated. Use the <c>SuspendUpdates</c> method instead.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.SuspendUpdates">
            <summary>
            Suspends auto updates for this layer.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.EndUpdate">
            <summary>
            Marks the end of updates.
            </summary>
            <remarks>
            This method is deprecated. Use the <c>ApplyUpdates</c> method instead.
            </remarks>
            <returns>True if some updates are actually applied, false otherwise.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ApplyUpdates">
            <summary>
            Applies updates collected on this layer.
            </summary>
            <remarks>
            In auto-update mode, the updates collected from the last <c>SuspendUpdates</c> call are applied.
            In manual-update mode, the updates collected from the last <c>ApplyUpdates</c> call are applied.
            </remarks>
            <returns>True if some updates are actually applied, false otherwise.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.IsGeographyLevelAvailable(System.String)">
            <summary>
            Tests the geography level to be available for the current map resolution.
            </summary>
            <param name="name">Geography level name.</param>
            <returns>True if the geography level is available.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.CreateDescriptionFields(ESRI.ArcGIS.Client.Graphic,ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates a list of fields describing value calculation properties for the given graphic feature of a thematic mapping layer.
            </summary>
            <param name="graphic">A graphic to create description fields for.</param>
            <param name="descriptionStyle">Value description style.</param>
            <returns>A new list of description fields.</returns>
            <exception cref="T:System.ArgumentException">The given graphic isn't associated with a thematic mapping layer.</exception>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.CreateDescription(ESRI.ArcGIS.Client.Graphic,ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates a dictionary of fields describing value calculation properties for the given graphic feature of a thematic mapping layer.
            </summary>
            <param name="graphic">A graphic to create description fields for.</param>
            <param name="descriptionStyle">Value description style.</param>
            <returns>A new dictionary of description fields.</returns>
            <exception cref="T:System.ArgumentException">The given graphic isn't associated with a thematic mapping layer.</exception>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMValueCalculator"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ClearLayer">
            <summary>
            The layer is cleared when map scale is too large or the query task fails.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ExtentChanged">
            <summary>
            Occurs when the map extent is changed.
            </summary>
            <remarks>
            This event can be used for updating availability of geography levels in GUI controls.
            </remarks>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.TMLayerAvailabilityChanged">
            <summary>
            Occurs when the layer availability is changed.
            </summary>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.TMLayerChanged">
            <summary>
            Occurs when this layer is changed.
            </summary>
            <remarks>
            This event is dispatched on the thread this object is associated with.
            </remarks>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.QueryTaskFailed">
            <summary>
            Occurs when a query task for this layer failed.
            </summary>
            <remarks>
            This event is dispatched on the thread this object is associated with.
            </remarks>
        </member>
        <member name="E:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ProgressChanged">
            <summary>
            Occurs when the layer update progress state is changed.
            </summary>
            <remarks>
            This event is dispatched with following values of <c>e.Progress</c> property:
            <table>
            <tr><th>Value</th> <th>Description</th></tr>
            <tr><td><c>0</c></td> <td>Start update thematic mapping layer.</td></tr>
            <tr><td><c>25</c></td> <td>Start asynchronous execution of query task.</td></tr>
            <tr><td><c>50</c></td> <td>Start update render.</td></tr>
            <tr><td><c>100</c></td> <td>Complete update thematic mapping layer or failed to execute query task.</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.QueryTask">
            <summary>
            The query task associated with this instance of layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.TMValueField">
            <summary>
            Name of the calculated field which will contain a value to render the thematic mapping layer by.
            <br/>Default:&#160;<c>"$TMValue"</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.Units">
            <summary>
            The units of the layer.
            <br/>Default:&#160;<c>esriUnits.esriDecimalDegrees</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AttributesProvider">
            <summary>
            Provider of thematic mapping attributes.
            </summary>
            <remarks>
            The provider is associated with the current geography layer. If the geography layer is missing,
            the provider will be null.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AdditionalFields">
            <summary>
            Additional fields of the thematic mapping layer requested in every query.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.GeographyLevels">
            <summary>
            Available geography levels. This collection is populated while initialization. 
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.IsReady">
            <summary>
            Is true if this layer is ready for show on map.
            </summary>
            <remarks>
            The layer is ready if it is successfully initialized and is associated with a map having a spatial reference.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.GeographyLevelName">
            <summary>
            Name of the geography level whose layer is currently shown in this layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.GeographyLevelAliasName">
            <summary>
            Alias name of the geography level whose layer is currently shown in this layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.GeographyLayer">
            <summary>
            A geography layer whose features are currently shown in this layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BestLayer">
            <summary>
            Geography layer which is best to show for the current map extent.
            </summary>
            <remarks>
            This property value is usually the same as the value of the <c>GeographyLayer</c> property
            except the case when the thematic mapping layer is not shown on the map. In this case,
            the <c>GeographyLayer</c> property value can be out-of-date and the <c>BestLayer</c>
            property value returns an actual layer to be shown when the thematic mapping layer will be
            visible.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.LastClassificationResults">
            <summary>
            Last classification results.
            <br/>Default:&#160;<c>an empty collection of classification results</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.Where">
            <summary>
            Query WHERE clause.
            <br/>Default:&#160;<c>null</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.Classification">
            <summary>
            Classification instance responsible for calculation class breaks.
            <br/>Default:Â an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMClassification"/> type.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ColorRamp">
            <summary>
            Color Ramp to thematically shade this layer with.
            <br/>Default:Â an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMColorRamp"/> type with "yellow to red" gradient.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.NumBreaks">
            <summary>
            Number of class breaks (should be positive).
            <br/>Default:&#160;<c>5</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.ValueCalculator">
            <summary>
            Calculator of value to thematically shade this layer by.
            <br/>Default:&#160;<c>null</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AnalysisExtent">
            <summary>
            Spatial/geographic extent on which to perform the query.
            <br/>Default:&#160;<c>null</c>.
            </summary>
            <remarks>
            If this extent is missing, the current map extent is used as the analysis extent.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.IntersectAnalysisExtentWithMapExtent">
            <summary>
            Defines how to compose an extent to perform the query if an analysis extent is specified.
            <br/>Default:&#160;<c>false</c>.
            </summary>
            <remarks>
            If this value is false and the analysis extent is specified, the given extent is always used to perform query on.
            If this value is true and the analysis extent is specified, an intersection of the analysis extent
            envolope with the current map extent is used to perform the query on.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.SpatialRelationship">
            <summary>
            The spatial selection method used for selection geography layer features in query task.
            <br/>Default:&#160;<c>SpatialRelationship.esriSpatialRelIntersects</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderBrush">
            <summary>
            The brush to draw borders around features.
            <br/>Default:&#160;<c>null</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.BorderThickness">
            <summary>
            The thickness of borders around features.
            <br/>Default:&#160;<c>1</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayer.AutoUpdate">
            <summary>
            The mode of applying updates to thematic layer.
            <br/>Default:&#160;<c>true</c>.
            </summary>
            <remarks>
            <para>In auto-update mode (AutoUpdate is true), any change in layer extent or properties affecting on
            layer symbolization and rendering are immediately applied.
            In manual-update mode (AutoUpdate is false), updates are applied on <c>ApplyUpdates</c> call.</para>
            <para>
            To temporary turn off auto-updating in auto-update mode, call the <c>SuspendUpdates</c> method.
            Updates will be suspended until the first <c>ApplyUpdates</c> call.
            </para>
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs">
            <summary>
            The TMLayerChangedEventArgs class provides properties of an event dispatched when a thematic mapping layer is updated.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.GeometryChanged">
            <summary>
            True if the collection of features is changed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.AttributesChanged">
            <summary>
            True if feature attributes are changed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.TMValueChanged">
            <summary>
            True if thematic mapping value of features is changed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.ClassificationChanged">
            <summary>
            True if classification of features is changed.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerChangedEventArgs.RendererChanged">
            <summary>
            True if renderer of features is changed.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerAvailableEventArgs">
            <summary>
            The TMLayerAvailableEventArgs class provides properties of an event dispatched when a thematic mapping layer availability is changed.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerAvailableEventArgs.#ctor(ESRI.ArcGIS.Client.Map,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerAvailableEventArgs"/> class.
            </summary>
            <param name="map">The map associated with the layer.</param>
            <param name="isAvailable">Layer availability status for the current map resolution.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerAvailableEventArgs.Map">
            <summary>
            The map associated with the layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMLayerAvailableEventArgs.IsAvailable">
            <summary>
            Whether the thematic mapping layer available for the current map resolution or not.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.QueryTaskOutput">
            <summary>
            The QueryTaskOutput class provides results of execution a thematic mapping query task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.QueryTaskOutput.#ctor(ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo,ESRI.ArcGIS.Client.Tasks.FeatureSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.QueryTaskOutput"/> class.
            </summary>
            <param name="layerInfo">Geography layer whose features are returned.</param>
            <param name="features">Returned features of the geography layer.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.QueryTaskOutput.LayerInfo">
            <summary>
            Geography layer whose features are returned.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.QueryTaskOutput.Features">
            <summary>
            Returned features of the geography layer.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.UserCredentials">
            <summary>
            The UserCredentials class provides the default implementation of user authentication.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.UserCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.UserCredentials"/> class.
            </summary>
            <param name="username">User name.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.UserCredentials.GetUserCredentials(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Collections.Generic.Dictionary{System.String,System.String}},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Gets user credentials.
            </summary>
            <remarks>
            This method copies entries of the input <paramref name="userInfo"/>
            object to the result object and sets values for the "username" and "password" keys
            with user credentials specified in parameters of the constructor.
            </remarks>
            <param name="userInfo">Additional user info parameters.</param>
            <param name="done">Authentication done callback function.</param>
            <param name="failed">Authentication failed callback function.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor">
            <summary>
            The BatchTaskProcessor class is responsible for processing a batch task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor.#ctor(ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor.PrepareCommand,ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{ESRI.ArcGIS.Client.BACore.Client.RequestState})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor"/> class.
            </summary>
            <param name="prepareCommand">Command preparing delegate.</param>
            <param name="resultHandler">Execution result handler.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor.ExecuteAsync(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters,System.Object,System.EventHandler{ESRI.ArcGIS.Client.BACore.Client.ClientEventArgs},System.EventHandler{ESRI.ArcGIS.Client.Tasks.TaskFailedEventArgs})">
            <summary>
            Executes the batch task.
            </summary>
            <param name="batchParameters">Batch task parameters.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
            <param name="executeCompleted">Execute completed event handler.</param>
            <param name="failed">Execute failed event handler.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProcessor.PrepareCommand">
            <summary>
            This delegate prepares a command to be executed.
            </summary>
            <param name="batchParameters">Batch task parameters.</param>
            <param name="taskProvider">Task execution provider.</param>
            <returns>A command to be executed or null.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BAResultType">
            <summary>
            The BAResultType class provides a enumeration of common result types parsed by Business Analyst clients.
            </summary>
            <remarks>
            More result types can be specified in subclasses. 
            This class can be used as a dictionary key.
            </remarks>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.TASK_RESULT_OUTPUT">
            <summary>
            TaskResultOutput type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.ID_NAME_PAIRS">
            <summary>
            Array of IDNamePair type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.STD_GEOGRAPHIES_FEATURES">
            <summary>
            Array of StdGeographiesFeature type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.REPORT_TEMPLATE_INFOS">
            <summary>
            Array of ReportTemplateInfo type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.SUMMARIZATION_INFOS">
            <summary>
            Array of SummarizationInfo type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.ARRAY_OF_STRING">
            <summary>
            Array of String type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.STRING">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.BOOLEAN">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.Client.BAResultType.SPECIAL">
            <summary>
            Special type (the result is processed with the method of
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IBAResultProcessor"/> interface implemented by task parameters).
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAResultType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BAResultType"/> class.
            </summary>
            <param name="name">Result type name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAResultType.Equals(System.Object)">
            <summary>
            Returns true if the compared object is the BAResultType type and its <c>Name</c> property
            equals to this <c>Name</c>.
            </summary>
            <param name="obj">An object to compare with.</param>
            <returns>True if the compared object equals to this object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BAResultType.GetHashCode">
            <summary>
            Gets a hash code of this instance as a hash code of its <c>Name</c> property.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BAResultType.Name">
            <summary>
            Result type name.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask">
            <summary>
            The Summary Reports task creates summary reports for a given set of boundaries.
            </summary>
            <remarks>
            <para>With several report template options, Summary Reports leverages
            Business Analyst Online's data layers to comprehensively describe,
            analyze, and summarize information associated with the input boundary areas.
            Summary Reports may also be leveraged to create mappable Feature Class
            representations of named geographic locations and boundary areas.</para>
            
            <para>The result of this task is a <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/> object,
            which is compatible with ArcGIS Server's mapping APIs.
            This task creates one or more reports for a given boundary layer.
            It should be primarily used to create reports for Business Analyst trade areas.
            Optional analysis, which can be requested simultaneously, includes the creation a feature record set
            and a map image for given boundary layer.</para>
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters)">
            <overloads>Asynchronous executes a Summary Reports task.</overloads>
            <summary>
            Asynchronous executes a Summary Reports task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters,System.Object)">
            <summary>
            Asynchronous executes a Summary Reports task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportEventArgs">
            <summary>
            EventArgs for the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/><c>.ExecuteCompleted</c> event (deprecated).
            </summary>
            <remarks>
            <note>
            This class is deprecated. It is provided for compatibility with the previous version of
            the Business Analyst Online API for Silverlight. Use a result event handler with a more general version of
            EventArgs type, for example with the <c>BATaskEventArgs&lt;TaskResultOutput&gt;</c> type.
            </note>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportEventArgs.TaskResultOutput">
            <summary>
            The TaskResultOutput returned by the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults">
            <summary>
            The ClassificationResults class provides results of data classification.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults"/> class.</overloads>
            <summary>
            Initializes an empty instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.ClassBreakInfo},System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults"/> class.
            </summary>
            <param name="classBreaks">List of class breaks.</param>
            <param name="minValue">Minimum value in data classified.</param>
            <param name="maxValue">Maximum value in data classified.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.Count">
            <summary>
            The number of class breaks in this collection.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.Item(System.Int32)">
            <summary>
            Gets a class break info by index.
            </summary>
            <param name="index">Zero-based index.</param>
            <returns>The required class break info.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.MaximumValue">
            <summary>
            Maximum value in data classified.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.MinimumValue">
            <summary>
            Minimum value in data classified.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.ClassificationResults.ValueFormat">
            <summary>
            Format recommended for formatting a thematic value.
            </summary>
            <remarks>
            This format can be used for formatting value of class breaks.
            It is usually specified with <c>FormatWithUnits=false</c> mode.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ExtentData">
            <summary>
            The ExtentData class specifies an extent used in parameters of Business Analyst tasks.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ExtentData.#ctor(ESRI.ArcGIS.Client.Geometry.Geometry)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ExtentData"/> class.
            </summary>
            <remarks>
            Only Polygon or Envelope type is allowed as the <paramref name="geometry"/> object.
            </remarks>
            <param name="geometry">Geometry object to be used as an extent.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ExtentData.op_Implicit(ESRI.ArcGIS.Client.Geometry.Geometry)~ESRI.ArcGIS.Client.BACore.ExtentData">
            <overloads>Implicitly converts an object of the Polygon or Envelope type to the ExtendData type.</overloads>
            <summary>
            Implicitly converts an object of the Geometry type to the ExtendData type.
            </summary>
            <remarks>
            Only Polygon or Envelope type is allowed as the <paramref name="geometry"/> object.
            </remarks>
            <param name="geometry">Geometry object.</param>
            <returns>Extent data.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ExtentData.op_Implicit(ESRI.ArcGIS.Client.Geometry.Polygon)~ESRI.ArcGIS.Client.BACore.ExtentData">
            <summary>
            Implicitly converts an object of the Polygon type to the ExtendData type.
            </summary>
            <param name="polygon">Polygon object.</param>
            <returns>Extent data.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ExtentData.op_Implicit(ESRI.ArcGIS.Client.Geometry.Envelope)~ESRI.ArcGIS.Client.BACore.ExtentData">
            <summary>
            Implicitly converts an object of the Envelope type to the ExtendData type.
            </summary>
            <param name="extent">Envelope object.</param>
            <returns>Extent data.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ExtentData.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ExtentData.Extent">
            <summary>
            Extent geometry.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ReportOptions">
            <summary>
            The ReportOptions class specifies output report format, template name, and custom header.
            </summary>
            <remarks>
            <para>The report <c>Header</c> property is optional.
            The report <c>Format</c> property is required.
            The <c>TemplateName</c> property is required in tasks producing summary reports.
            </para>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> class.</overloads>
            <summary>
            Initializes an empty instance of the ReportOptions class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> class by report format.
            </summary>
            <param name="format">The report format.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> class by template name and report format.
            </summary>
            <param name="format">The report format.</param>
            <param name="templateName">The report template name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.#ctor(System.String,System.String,ESRI.ArcGIS.Client.BACore.BAReportHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> class by all parameters.
            </summary>
            <param name="format">The report format.</param>
            <param name="templateName">The report template name.</param>
            <param name="header">The report header. Allows a customization of report header parameters.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.HasTemplateName(ESRI.ArcGIS.Client.BACore.ReportOptions)">
            <summary>
            Validates that the ReportOptions type instance is specified and its TemplateName property is nonempty.
            </summary>
            <param name="value">Value to validate.</param>
            <returns>True, if the TemplateName property is specified.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportOptions.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportOptions.TemplateName">
            <summary>
            Summary report template name.
            </summary>
            <remarks>
            This name must be a valid report template name
            returned by the Get Report Templates task from the Business Analyst API.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportOptions.Format">
            <summary>
            Report format.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportOptions.Header">
            <summary>
            Custom report header parameters.
            </summary>
            <remarks>
            The get accessor always returns non-null value.
            If the custom header is not specified, a new custom header is created on the first getter.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo">
            <summary>
            The SummarizationInfo class specifies properties of a summarization variable available 
            for a Business Analyst data hierarchy.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.SummarizationInfo.#ctor(System.String,System.String,System.String,System.String)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo"/> class.
            </summary>
            <param name="name">Summarization variable name.</param>
            <param name="alias">Summarization variable alias name.</param>
            <param name="category">Summarization variable category.</param>
            <param name="longDescription">User-friendly summarization name.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.SummarizationInfo.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo"/> class with additional properties.
            </summary>
            <param name="name">Summarization variable name.</param>
            <param name="alias">Summarization variable alias name.</param>
            <param name="category">Summarization variable category.</param>
            <param name="longDescription">User-friendly summarization name.</param>
            <param name="decimals">The number of decimal places after the decimal point for this variable.</param>
            <param name="percentage">Field name for the denominator that is used to help calculate the percentage for this variable.</param>
            <param name="avgBase">Field name for the denominator that is used to help calculate the average value of this variable for total households.</param>
            <param name="indexBase">Value of this variable for the whole US for the year.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.SummarizationInfo.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Double},ESRI.ArcGIS.Client.BACore.BAValueType)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.SummarizationInfo"/> class with additional properties and value type.
            </summary>
            <param name="name">Summarization variable name.</param>
            <param name="alias">Summarization variable alias name.</param>
            <param name="category">Summarization variable category.</param>
            <param name="longDescription">User-friendly summarization name.</param>
            <param name="decimals">The number of decimal places after the decimal point for this variable.</param>
            <param name="percentage">Field name for the denominator that is used to help calculate the percentage for this variable.</param>
            <param name="avgBase">Field name for the denominator that is used to help calculate the average value of this variable for total households.</param>
            <param name="indexBase">Value of this variable for the whole US for the year.</param>
            <param name="valueType">Type of value of this variable.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.Name">
            <summary>
            Summarization variable name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.Alias">
            <summary>
            Summarization variable alias name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.Category">
            <summary>
            Summarization variable category.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.LongDescription">
            <summary>
            User-friendly summarization name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.Decimals">
            <summary>
            The number of decimal places after the decimal point for this variable.
            </summary>
            <remarks>
            This property is used in the Business Analyst Online API.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.Percentage">
            <summary>
            Field name for the denominator that is used to help calculate the percentage for this variable.
            </summary>
            <remarks>
            This property is used in the Business Analyst Online API.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.AvgBase">
            <summary>
            Field name for the denominator that is used to help calculate the average value of this variable for total households.
            </summary>
            <remarks>
            This property is used in the Business Analyst Online API.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.IndexBase">
            <summary>
            Value of this variable for the whole country for the year.
            </summary>
            <remarks>
            This property is used in the Business Analyst Online API.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.SummarizationInfo.ValueType">
            <summary>
            Type of value of this variable.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BenchmarkOptions">
            <summary>
            The enumeration of methods used in creation a benchmark area.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkOptions.useNone">
            <summary>
            Create a report without comparison with benchmark.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkOptions.useOneOfTheTradeAreas">
            <summary>
            Select a benchmark area from a benchmark layer by its OID.
            Benchmark Layer and Benchmark Area OID parameters should be specified in benchmark report parameters.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkOptions.useAverageValues">
            <summary>
            Create the benchmark area by calculating average summarization values for all areas in trade area layers.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkOptions.useMedianValues">
            <summary>
            Create the benchmark area by calculating median summarization values for all areas in trade area layers.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions">
            <summary>
            The enumeration of report fields sorting options used in creation a Benchmark report.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions.sortNone">
            <summary>
            No sorting.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions.sortByFieldOnly">
            <summary>
            Sort by field value.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions.sortByFieldDifference">
            <summary>
            Sort by difference between field value and benchmark field value.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions.sortByFieldPercent">
            <summary>
            Sort by percentage of field value with respect to benchmark field value.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BenchmarkSortOptions.sortByFieldIndex">
            <summary>
            Sort by field index.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask">
            <summary>
            The Geofence Info task requests geography features available for the current user's account.
            </summary>
            <remarks>
            <para>This task queries available features from a standard geography data layer according to the
            Business Analyst Online API user account geofence constraints.</para>
            <para>
            When specifying the request with a Business Analyst Online API user account with geofence constraints,
            the geofence criteria is applied before the output response is generated. The output response will contain
            a list of feature IDs and names in a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoOutput"/>.<c>StdGeographiesFeatures</c> array.
            If no matching features were found by the query criteria or all of the features were rejected by
            the geofence constraints, the array will be null.
            </para>
            <para>
            Additionally, a map image and a feature class can be generated for resulting features and returned
            in the output results depending on the output options selected. If you only need feature IDs and names
            as the output, you can pass null as the OutputTypes parameter.
            </para>
            <note>A user account is identified by the authentication token parameter value.</note>
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters)">
            <overloads>Asynchronous executes a Geofence Info task.</overloads>
            <summary>
            Asynchronous executes a Geofence Info task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters,System.Object)">
            <summary>
            Asynchronous executes a Geofence Info task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Geofence.GeofenceInfoParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters">
            <summary>
            The StdGeographiesFromExtentParameters class provides input parameters for the Standard Geographies from Extent task.
            </summary>
            <exampleintro>
            The code snippet below creates StdGeographiesFromExtentParameters and then executes a Standard Geographies from Extent task.
            </exampleintro>
            <example>
            <code>
            StdGeographiesFromExtentParameters parameters = new StdGeographiesFromExtentParameters();
            
            // Set a standard geography level.
            parameters.GeoLevelID = "US.ZIP5";
            
            // Set a data extent for analysis to ExtendData object specified with myExtent.
            parameters.AnalysisExtent = myExtent;
            
            // SpatialRelationship.esriSpatialRelIntersects is the default value for SpatialRelationship.
            //parameters.SpatialRelationship = SpatialRelationship.esriSpatialRelIntersects;
            
            stdGeographiesFromExtentTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentTask"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters"/> class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters.GeoLevelID">
            <summary>
            ID of a standard geography level to find geography features in.
            </summary>
            <remarks>
            A list of available geography levels could be retrieved with the Get Standard Geography Levels task.
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters.AnalysisExtent">
            <summary>
            Spatial/geographic extent on which to perform the query.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesFromExtentParameters.SpatialRelationship">
            <summary>
            The spatial selection method used with the <c>AnalysisExtent</c> to define the area of analysis.
            <br/>Default:&#160;<c>SpatialRelationship.esriSpatialRelIntersects</c>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters">
             <summary>
             The BatchTaskParameters class provides parameters for a Business Analyst batch task.
             </summary>
             <remarks>
             <para><b>Task Providers</b></para>
             
             <para>The <see cref="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.TaskProviders"/>
             list contains providers of tasks to be executed in the batch task.
             Three types of task providers are allowed in this listâ€”<i>task parameters provider</i> whose value
             implements the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters"/> interface, <i>task command provider</i> whose value is
             an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/> class, or <i>task delegate provider</i> whose value is
             a <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate"/> method.</para>
             
             <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate"/> instance receives on input the current 
             context of parameters, prepares parameters of the task to be executed, and returns them
             or a command instance or another task delegate provider.
             If it returns null, the batch task processor goes to the next task provider in the list.</para>
             
             <para>If a task delegate provider throws an exception or execution of any task in the batch task fails,
             the batch task stops execution and notifies its fault event handler.</para> 
             
             <para><b>Other Batch Task Parameters</b></para>
            
             <para>The <see cref="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.CurrentStep"/>
             property specifies a zero-based index of the step currently executed.
             Since a task delegate provider has an access to the parameters
             of the batch task, it can change a step to be executed next by setting the <c>CurrentStep</c>
             value to a zero-based index of the step before the next one. For example, if you want to
             go from the step 3 to 5, set the <c>CurrentStep</c> value to 4 in the task delegate provider
             of the step 3.</para>
             
             <para>The <see cref="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.SharedData"/>
             property is intended for sharing data between steps of the batch task.
             It can be populated with some initial data before executing the batch task and its contents
             can be updated in a task delegate provider executed at the current step.
             </para>
             
             <para>Batch task execution results are collected in the
             <see cref="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.Results"/> list. When a step of the batch task
             is successfully completed, the result of last executed task is appended to the end of this list and becomes
             available via <see cref="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.LastResult"/> property.</para>
             
             <para><b>Batch Task Director</b></para>
             
             <para>A special batch task director callback method, <c>onStepComplete</c>, can be specified in the
             constructor of this class. It is called at the end of execution of every step of the batch task.
             When this method is invoked, its <c>completedStep</c> parameter specifies
             a zero-based index of the step completed; the <c>parameters.CurrentStep</c> value
             specifies a zero-based index of the step to be executed next; and the
             <c>parameters.LastResult</c> value contains the result of completion of the last step. 
             This method can perform validation of the last result, logging the execution process,
             store results in UserState, change a step to be executed next, and so on.
             In order to complete the whole task after execution a step, set
             <c>parameters.CurrentStep=parameters.TokenProviders.Count</c> in the scope of
             this method.</para>
              
             <para>The <c>onStepComplete</c> method can throw an exception
             to prevent execution of the next step. In this case, the execution of the batch task
             immediately stops and the task fault event handler is notified.</para>
             </remarks>
             <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/> class with empty list of task providers
            and without step-completed callback method.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/> class with a specified list of task providers.
            </summary>
            <param name="taskProviders">List of task providers (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.#ctor(ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.StepCompleteCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/> class with a specified step-completed callback method.
            </summary>
            <param name="onStepComplete">Call back method to execute on step completion (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider},ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.StepCompleteCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/> class with a specified list of task providers and a
            step-completed callback method.
            </summary>
            <param name="taskProviders">List of task providers (can be null).</param>
            <param name="onStepComplete">Call back method to execute on step completion (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.AddTask(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <overloads>Adds a task provider to the end of list of task providers.</overloads>
            <summary>
            Adds parameters of a Business Analyst task to the end of list of task providers.
            </summary>
            <param name="parameters">Business Analyst task parameters.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.AddTask(ESRI.ArcGIS.Client.BACore.Client.BACommand)">
            <summary>
            Adds a Business Analyst command to the end of list of task providers.
            </summary>
            <param name="command">Business Analyst command instance.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.AddTask(ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate)">
            <summary>
            Adds a task provider to the end of list of task providers.
            </summary>
            <param name="taskProvider">Task provider delegate.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.TaskProviders">
            <summary>
            List of task providers.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.TaskName">
            <summary>
            Batch task title.
            <br/>Default:&#160;<c>"BatchTask"</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.Results">
            <summary>
            List of task execution results.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.LastResult">
            <summary>
            Last task execution result.
            </summary>
            <remarks>
            This is the last object in the <c>Results</c> list.
            If this list is empty, the last result is null. 
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.SharedData">
            <summary>
            A dictionary containing data shared between steps. 
            </summary>
            <remarks>
            Task providers can pass share data between steps using this object.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.CurrentStep">
            <summary>
            Zero-based index of the currently executed step.
            </summary>
            <remarks>
            Before execution a batch task, this property value specifies
            a zero-based index of a step to start execution from.
            The default initial value is zero.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters.StepCompleteCallback">
            <summary>
            This callback method is invoked after completion of a batch task step.
            </summary>
            <param name="parameters">Batch task parameters.</param>
            <param name="completedStep">Zero-based index of completed step.</param>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask">
             <summary>
             The Get Report Templates task requests a list of available report templates
             with their respective titles, categories, available formats, and names.
             </summary>
             <remarks>
             <para>Some applications of Get Report Templates include the following:</para>
             <list type="bullet">
             <item><description>A Web application developer may want to consume the output of Get Report Templates in a
             dynamically-bound grid or option list dialog to allow their users to scroll through the
             Summary Reports template options.</description></item>
             <item><description>Stakeholders for a business, organization, or agency may want to review the available
             Summary Reports template options prior to designing a Web services-based application which leverages
             the Business Analyst Online Flex API.</description></item>
             </list>
            
             <para>The result of this task is an array of <see cref="T:ESRI.ArcGIS.Client.BACore.ReportTemplateInfo"/> objects which provides information
             about Summary Report templates and their names to use when specifying them in subsequent analysis.
             Report template names are used in the <c>ReportOptions</c> parameter in Drive Time,
             Simple Rings, and Summary Reports.</para>
             </remarks>
             <exampleintro>The code snippet below executes a Get Report Templates task.</exampleintro>
             <example>
             <code>
             getReportTemplatesTask.ExecuteAsync(new AsyncResponder(resultHandler, faultHandler));
             </code>
             </example>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters"/>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters"/>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.ExecuteAsync">
            <overloads>Asynchronous executes a Get Report Templates task.</overloads>
            <summary>
            Asynchronous executes a Get Report Templates task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.ExecuteAsync(System.Object)">
            <summary>
            Asynchronous executes a Get Report Templates task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.CreateCommand">
            <overloads>Creates a new command encapsulating this task.</overloads>
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.CreateCommand(System.String)">
            <summary>
            Creates a new command encapsulating this task.
            </summary>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetReportTemplatesTask.CreateParameters">
            <summary>
            Creates parameters of this task to execute it with a generic or batch task.
            </summary>
            <returns>Parameters of this task.</returns>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.ExecuteAsync">
            <overloads>Asynchronous executes a Geography Levels Info task.</overloads>
            <summary>
            Asynchronous executes a Geography Levels Info task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.ExecuteAsync(System.Object)">
            <summary>
            Asynchronous executes a Geography Levels Info task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.CreateCommand">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.CreateCommand(System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.GeographyLevelsInfoTask.CreateParameters">
            <summary>
            Creates parameters of this task to execute it with a generic or batch task.
            </summary>
            <returns>Parameters of this task.</returns>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineGenericTask"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineBatchTask"/>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider">
            <summary>
            The BAOnlineTokenProvider class implements the token provider used with the
            Business Analyst Online API tasks.
            </summary>
            <exampleintro>
            <para>The code snippet below shows how to create an instance of the token provider
            to be used with Business Analyst Online tasks. A token provider can be associated with
            an instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> class or with a task deriving from
            the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineTask`1"/> class. Different tasks can share the same token provider
            object.</para>
            <para>To get the example working, specify valid values for username, password and the URLs.</para>
            </exampleintro>
            <example>
            <code>
            BAOnlineTokenProvider tokenProvider = new BAOnlineTokenProvider(new UserCredentials("username", "password"));
            tokenProvider.Url = "https://baoapi.esri.com";
            
            BAOnlineClient client = new BAOnlineClient("http://baoapi.esri.com");
            client.TokenProvider = tokenProvider;
            </code>
            </example>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.IAuthentication)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider"/> class.
            </summary>
            <remarks>The <paramref name="authentication"/> object provides user credentials receiving.
            When its <c>GetUserCredentials</c> method is invoked, the <c>userInfo</c> parameter
            contains the "url" key specifying the token service URL. This entry should be passed to the output
            <c>userCredentials</c> object along with the "username" and "password" entries.
            </remarks>
            <param name="authentication">An object used for getting user credentials.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.IAuthentication,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider"/> class.
            </summary>
            <remarks>The <paramref name="authentication"/> object provides user credentials receiving.
            When its <c>GetUserCredentials</c> method is invoked, the <c>userInfo</c> parameter
            contains the "url" key specifying the token service URL. This entry should be passed to the output
            <c>userCredentials</c> object along with the "username" and "password" entries.
            </remarks>
            <param name="authentication">An object used for getting user credentials.</param>
            <param name="url">Business Analyst Online Authentication task base URL.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider.ExecuteAsync(System.Collections.Generic.Dictionary{System.String,System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.String},ESRI.ArcGIS.Client.BACore.Client.AsyncCallback{System.Exception})">
            <summary>
            Executes the authentication task.
            </summary>
            <param name="userCredentials">User credentials.</param>
            <param name="done">Update done callback.</param>
            <param name="failed">Update failed callback.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider.AuthenticationTask">
            <summary>
            Authentication task associated with this token provider.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.PointLayer">
            <summary>
            The PointLayer class specifies a Business Analyst Server data layer with the point geometry.
            </summary>
            <remarks>
            An instance of this class can be composed of a FeatureSet (Feature Record Set) instance or
            an array of PointRecord items. The <c>FeatureSet</c> and 
            <c>Points</c> properties are mutually exclusive. If the <c>Points</c> property is specified,
            the <c>SpatialReference</c> property should be also specified.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.PointLayer"/> class.</overloads>
            <summary>
            Initializes an empty instance of the PointLayer class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.#ctor(System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.PointRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.PointLayer"/> class by a list of point records.
            </summary>
            <param name="points">List of point records.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.#ctor(ESRI.ArcGIS.Client.Tasks.FeatureSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.PointLayer"/> class by feature record set.
            </summary>
            <param name="featureSet">Feature record set.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.op_Implicit(System.Collections.Generic.List{ESRI.ArcGIS.Client.BACore.PointRecord})~ESRI.ArcGIS.Client.BAO.PointLayer">
            <overloads>Implicitly converts an object to PointLayer.</overloads>
            <summary>
            Implicitly converts a list of PointRecord objects to PointLayer.
            </summary>
            <param name="points">List of point records.</param>
            <returns>Point data layer.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.op_Implicit(ESRI.ArcGIS.Client.Tasks.FeatureSet)~ESRI.ArcGIS.Client.BAO.PointLayer">
            <summary>
            Implicitly converts a FeatureSet object to PointLayer.
            </summary>
            <param name="featureSet">Feature record set.</param>
            <returns>Point data layer.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.PointLayer.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.PointLayer.Points">
            <summary>
            List of point records.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.PointLayer.SpatialReference">
            <summary>
            A spatial reference.
            <br/>Default:&#160;GCS_WGS_1984 (WKID 4326)
            </summary>
            <remarks>
            This property is specified together with the <c>Points</c> property.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.JsonList`1">
            <summary>
            The JsonList class provides serialization of its items to JSON array.
            </summary>
            <remarks>
            Array items are validated with a special validator when this list is serialized
            to JSON array or to semicolon-separated list. If a special validator is not specified,
            the default validator validates that all array items are specified (non-null and nonempty).
            </remarks>
            <typeparam name="T">A type of entries used in this list.</typeparam>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.JsonList`1">JsonList</see> class.</overloads>
            <summary>
            Initializes an empty instance of the JsonList class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.#ctor(ESRI.ArcGIS.Client.BACore.ValidatorCallback{`0})">
            <summary>
            Initializes an empty instance of the JsonList class with a specified validator.
            </summary>
            <param name="validator">Validator of JsonList members (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.JsonList`1">JsonList</see> class by a collection of members.
            </summary>
            <param name="source">Source collection (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.#ctor(System.Collections.Generic.IEnumerable{`0},ESRI.ArcGIS.Client.BACore.ValidatorCallback{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.JsonList`1">JsonList</see> class by a collection of members and validator.
            </summary>
            <param name="source">Source collection (can be null).</param>
            <param name="validator">Validator of JsonList members (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.ToString">
            <overloads>Serializes this instance to a string value.</overloads>
            <summary>
            Serializes this instance to a string value.
            </summary>
            <remarks>
            <para>
            If the type of entries in this array implements the <see cref="T:ESRI.ArcGIS.Client.BACore.IJsonObject"/>
            or <c>IDictionary&lt;string,object&gt;</c> or <c>IList&lt;object&gt;</c> interfaces,
            the JSON-serialized string is returned. Otherwise, values of this array
            are converted to a string list delimited with the semicolon char.
            </para>
            <para>
            List items are validated while serialization.
            </para>
            </remarks>
            <returns>String representation of this array.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.JsonList`1.ToString(System.String)">
            <summary>
            Sesializes this instance to a string list whose values are delimited with the given separator.
            </summary>
            <remarks>List items are validated while serialization.</remarks>
            <param name="separator">Separator string.</param>
            <returns>String representation of this array.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ValidatorCallback`1">
            <summary>
            Validates a value of object of the given type.
            </summary>
            <typeparam name="T">Object type.</typeparam>
            <param name="value">Object value.</param>
            <returns>True, if object is valid.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask">
            <summary>
            The Simple Rings task requests for creating ring-based trade/service areas based on straight-line
            ("as the crow flies") distances from point features.
            </summary>
            <remarks>
            <para>Simple Rings analysis using the <c>Donut</c> parameter option creates output ring-based
            trade/service areas that are in bands instead of concentric overlapping rings.
            For example, if three radii are entered with values of one, three, and five miles, three output bands
            would be created with 0-1, 1â€“3, and 3â€“5 mile trade/service area rings instead of 0-1, 0-3, and 0-5 mile rings.
            This will result in the creation of non-overlapping trade/service areas that will have significantly different
            results in subsequent analysis such as with Summary Reports.</para>
             
            <para>Some applications of Simple Rings include the following:</para>
            <list type="bullet">
            <item><description>In most marketing applications, the point origins of ring-based analyses will be retail storefronts.
            </description></item>
            <item><description>Ring-based trade/service area analysis may be useful for studying the underlying market characteristics
            and demographics of the surrounding population.</description></item>
            </list>
            
            <para>The Simple Rings task trade/service areas differs significantly from the Drive Time task trade/service areas,
            which define these areas based on driving times or driving distances
            from the origin points over a street network. In highly urbanized areas, Drive Time may be a more logical choice
            for analysis since it takes into account the street network surrounding the store/origin points.</para>
            
            <para>The result of this task is a <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/> object,
            which is compatible with ArcGIS Server's mapping APIs. FeatureSet, MapImage, and an array of
            <see cref="T:ESRI.ArcGIS.Client.BACore.ReportInfo"/> objects can be returned in it depending on task output options requested.</para>
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.SummaryReportsTask"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters)">
            <overloads>Asynchronous executes a Simple Rings task.</overloads>
            <summary>
            Asynchronous executes a Simple Rings task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters,System.Object)">
            <summary>
            Asynchronous executes a Simple Rings task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask">
             <summary>
             The Benchmark Report task requests a comparative report that benchmarks two or more trade
             areas based on selected volumetric data (typically demographic data).
             </summary>
             <remarks>
             <para>This task allows you to compare multiple trade areas against one another to decipher how
             different or similar one location is over the next. You can easily measure the demographic
             characteristics of one area versus all other areas. The report shows statistical differences
             in raw number, percent, and index values.</para>
            
             <para>The benchmarks can only be made on variables that exist in all trade areas being compared.
             Variables and trade areas can be shown in either rows or columns.
             When benchmarking all trade areas against a single trade area, the average or the median of all
             the trade areas can be calculated and used as the benchmark.</para>
             
             <para>The result of this task is a <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/> object,
             which is compatible with ArcGIS Server's mapping APIs.
             The output report is specified as a single item of the array of <see cref="T:ESRI.ArcGIS.Client.BACore.ReportInfo"/> objects.</para>
             </remarks>
             <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters"/>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.Name">
            <summary>
            Task name.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.#ctor(ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask"/> class.
            </summary>
            <remarks>
            <para>
            A new task can be constructed in two ways: as a task sharing a <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.BAOnlineClient"/> type
            instance with other tasks or as a standalone task encapsulating its own client. In the last case,
            an URL string passed in <paramref name="client"/> parameter of the constructor is implicitly converted
            to a private instance of the BAOnlineClient class. If this parameter is null or empty,
            the "http://baoapi.esri.com" value is assigned as the base URL.
            </para>
            <para>The base URL to the Business Analyst Online HTTP Service looks as follows:</para>
            <para><c>http://{host}:{port}</c></para>
            <para>The <c>{host}</c> and <c>{port}</c> parameters in this URL should be substituted with
            valid Business Analyst Online host name and port, respectively.</para>
            </remarks>
            <param name="client">Business Analyst Online Client class or null.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters)">
            <overloads>Asynchronous executes a Benchmark Report task.</overloads>
            <summary>
            Asynchronous executes a Benchmark Report task.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.ExecuteAsync(ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters,System.Object)">
            <summary>
            Asynchronous executes a Benchmark Report task.
            </summary>
            <remarks>
            <para>A response can be received in two waysâ€”using <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/> interfaces passed
            as the <paramref name="userState"/> object and/or using listeners of the <c>ExecuteCompleted</c>
            and <c>Failed</c> events registered for this task.</para>
            
            <para>The <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IResponder"/>, if specified, is notified first.
            After that the received event is dispatched for listeners of this task.
            If a response is succesfully received, the result is assigned to the
            <c>LastResult</c> property of this task.</para>
            </remarks>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes or fails.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters)">
            <overloads>Creates a new command encapsulating this task and the given parameters.</overloads>
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <returns>A new command.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportTask.CreateCommand(ESRI.ArcGIS.Client.BAO.Tasks.Reports.BenchmarkReportParameters,System.String)">
            <summary>
            Creates a new command encapsulating this task and the given parameters.
            </summary>
            <param name="parameters">Parameters of the task to be executed.</param>
            <param name="commandName">Command name (can be null).</param>
            <returns>A new command.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ValueFormat">
            <summary>
            The ValueFormat class provides formatting of a numerical value.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ValueFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ValueFormat"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ValueFormat.FormatValue(System.Double)">
            <summary>
            Formats a value to the string representation applying properties of this format.
            </summary>
            <param name="value">A value to be formatted.</param>
            <returns>String representation of the value.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ValueFormat.Decimals">
            <summary>
            The number of significant digits after the decimal point.
            <br/>Default:&#160;<c>-1</c>.
            </summary>
            <remarks>Negative value means unknown number of digits.</remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ValueFormat.ValueType">
            <summary>
            The type of value to be formatted.
            <br/>Default:&#160;<c>BAValueType.Count</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ValueFormat.Formatter">
            <summary>
            Formatter to be used to format the value.
            <br/>Default:Â an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ValueFormatter"/> class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ValueFormat.FormatWithUnits">
            <summary>
            True value of this property means formatting with units.
            <br/>Default:&#160;<c>true</c>.
            </summary>
            <remarks>
            If this property value is true, the <c>FormatValueWithUnits</c> method of value formatter is used.
            Otherwise, the <c>FormatValue</c> method is used.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider">
            <summary>
            The TMAttributesProvider class provides an access to attributes of a feature of a thematic mapping layer.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.#ctor(ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueCalculator,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider"/> class.
            </summary>
            <remarks>
            The <paramref name="nameField"/> parameter is optional. If it is null or empty, the <paramref name="idField"/>
            parameter value is used as a name field.
            </remarks>
            <param name="actualCalculator">Value calculator actually used in calculation of thematic mapping values (can be null).</param>
            <param name="idField">Name of field representing a feature ID.</param>
            <param name="nameField">Name of field representing a feature name (optional, can be null).</param>
            <param name="tmValueField">Name of the calculated field which contains a value to render the thematic mapping layer by.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.CreateTMValueFormat(System.Boolean)">
            <summary>
            Creates a format for formatting the thematic value.
            </summary>
            <param name="formatWithUnits">True value means formatting with units.</param>
            <returns>A new value format.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
            Gets the given feature attribute.
            </summary>
            <param name="attributes">Attributes of a graphic feature.</param>
            <param name="name">Name of requested attribute field.</param>
            <param name="defaultValue">Default value to be returned if the attribute is missing.</param>
            <returns>Value of the attribute or the default value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.GetDouble(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the given feature attribute as a double precision number.
            </summary>
            <param name="attributes">Attributes of a graphic feature.</param>
            <param name="name">Name of requested attribute field.</param>
            <returns>Value of the attribute or NaN if the attribute is missing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.GetFeatureID(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the feature ID.
            </summary>
            <param name="attributes">Attributes of a graphic feature.</param>
            <returns>Feature ID or an empty string if the feature ID attribute is missing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.GetFeatureName(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the feature name.
            </summary>
            <param name="attributes">Attributes of a graphic feature.</param>
            <returns>Feature name or an empty string if the feature name attribute is missing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.GetTMValue(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the thematic mapping value.
            </summary>
            <param name="attributes">Attributes of a graphic feature.</param>
            <returns>Thematic mapping value or NaN if thematic mapping value is missing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.CalculateTMValue(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates thematic mapping value using the actual value calculator.
            </summary>
            <remarks>If the value calculator is missing, NaN is returned.</remarks>
            <param name="attributes">Attributes of a graphic feature.</param>
            <returns>Thematic mapping value.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.CreateDescriptionFields(System.Collections.Generic.IDictionary{System.String,System.Object},ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle)">
            <summary>
            Creates a list of fields describing value calculation properties.
            </summary>
            <param name="attributes">Attributes of feature to get values from.</param>
            <param name="descriptionStyle">Value description style.</param>
            <returns>A new list of feature description fields.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.TMAttributesProvider.ActualValueCalculator">
            <summary>
            Value calculator actually used in calculation of thematic mapping values.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle">
            <summary>
            Enumeration of thematic value description methods.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle.None">
            <summary>
            Empty description.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle.Simple">
            <summary>
            Simple description (thematic mapping value only).
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle.Short">
            <summary>
            Short description (thematic mapping value, feature ID, and feature name).
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.ValueDescriptionStyle.Long">
            <summary>
            Long description (thematic mapping value, feature ID, feature name, and other description fields).
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.RenderingParameters">
            <summary>
            The RenderingParameters class provides parameters of rendering a task output as an image.
            </summary>
            <remarks>
            This class is now used in the Business Analyst Server API only.
            The <c>ImageDescription</c> and <c>MapDescription</c> properties are optional
            parameters. If the <c>MapDescription</c> is missing, the default map will be used.
            If the <c>ImageDescription</c> is missing, default values are used for rendering image.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.RenderingParameters.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.RenderingParameters"/> class.</overloads>
            <summary>
            Initializes an empty instance of the RenderingParameters class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.RenderingParameters.#ctor(ESRI.ArcGIS.Client.BACore.ImageDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.RenderingParameters"/> class by image descriotion.
            </summary>
            <param name="imageDescription">Image description.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.RenderingParameters.#ctor(ESRI.ArcGIS.Client.BACore.ImageDescription,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.RenderingParameters"/> class by image and map descriptions.
            </summary>
            <param name="imageDescription">Image description.</param>
            <param name="mapDescription">Map description XML string.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.RenderingParameters.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.RenderingParameters.ImageDescription">
            <summary>
            Settings of the image to be generated.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.RenderingParameters.MapDescription">
            <summary>
            Settings of a map of the current document which will be used for rendering layer to image.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.RenderingParameters.ZoomToLayer">
            <summary>
            Either zoom the map to layer before rendering to image or not.
            </summary>
            <remarks>
            If true, the map will be zoomed to layer before rendering and
            the whole layer will be rendered to image. Otherwise, the whole map will be drown
            with the layer on it. It is recommended to set this option to true value.
            Default value is true.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ImageDescription">
            <summary>
            The ImageDescription class provides settings of the image to be generated.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDescription.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDescription"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDescription"/> class with default settings.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDescription.#ctor(ESRI.ArcGIS.Client.BACore.ImageDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDescription"/> class with specified display characteristics
            and the default image type.
            </summary>
            <param name="imageDisplay">The display characteristics of the image to be generated.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDescription.#ctor(ESRI.ArcGIS.Client.BACore.ImageType)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDescription"/> class with default display characteristics
            and the specified image type.
            </summary>
            <param name="imageType">The type of image to be generated.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDescription.#ctor(ESRI.ArcGIS.Client.BACore.ImageDisplay,ESRI.ArcGIS.Client.BACore.ImageType)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDescription"/> class.
            </summary>
            <param name="imageDisplay">The display characteristics of the image to be generated (can be null).</param>
            <param name="imageType">The type of image to be generated (can be null).</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDescription.ToString">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>A JSON string.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageDescription.ImageDisplay">
            <summary>
            The display characteristics of the image to be generated.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageDescription.ImageType">
            <summary>
            The type of image to be generated.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ImageDisplay">
            <summary>
            The ImageDisplay class provides the display characteristics of the image to be generated.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDisplay.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDisplay"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDisplay"/> class with default settings.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDisplay.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDisplay"/> class with default resolution.
            </summary>
            <param name="imageWidth">Image width in pixels.</param>
            <param name="imageHeight">Image height in pixels.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageDisplay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageDisplay"/> class.
            </summary>
            <param name="imageWidth">Image width in pixels.</param>
            <param name="imageHeight">Image height in pixels.</param>
            <param name="imageDPI">Image device resolution in dots per inch.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageDisplay.ImageDPI">
            <summary>
            The device resolution of the image in dots per inch. Default: 96.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageDisplay.ImageHeight">
            <summary>
            The height of the image in pixels. Default: 768.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageDisplay.ImageWidth">
            <summary>
            The width of the image in pixels. Default: 1024.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ImageType">
            <summary>
            The ImageType class provides information about the type of image to be generated.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageType.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageType"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageType"/> class with the default format.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageType.#ctor(ESRI.ArcGIS.Client.BACore.ImageFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ImageType"/> class.
            </summary>
            <param name="imageFormat">Image format.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ImageType.op_Implicit(ESRI.ArcGIS.Client.BACore.ImageFormat)~ESRI.ArcGIS.Client.BACore.ImageType">
            <summary>
            Implicitly converts a ImageFormat value to ImageType.
            </summary>
            <param name="imageFormat">Image format.</param>
            <returns>A new instance of the ImageType class.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageType.ImageFormat">
            <summary>
            The image format. Default: ImageFormat.esriImagePNG.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ImageType.ImageReturnType">
            <summary>
            The return type. Only the URL return type is supported in the Business Analyst API for Silverlight.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ImageFormat">
            <summary>
            Enumeration of supported image formats.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageNone">
            <summary>
            No image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageBMP">
            <summary>
            Bitmap image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageJPG">
            <summary>
            JPEG image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageDIB">
            <summary>
            DIB image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageTIFF">
            <summary>
            TIFF image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImagePNG">
            <summary>
            Portable network graphic (8 bit) image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImagePNG24">
            <summary>
            Portable network graphic (24 bit) image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageEMF">
            <summary>
            Enhanced metafile image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImagePS">
            <summary>
            Postscript image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImagePDF">
            <summary>
            PDF image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageAI">
            <summary>
            AI image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageGIF">
            <summary>
            GIF image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImageSVG">
            <summary>
            SVG image.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ImageFormat.esriImagePNG32">
            <summary>
            Portable network graphic (32 bit) image.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput">
            <summary>
            The TaskResultOutput class encapsulates an output from a Business Analyst task
            producing multiple output results.
            </summary>
            <remarks>
            An instance of this class can contain a feature record set, an array of report infos,
            and an output map image data.
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.TaskResultOutput.#ctor(ESRI.ArcGIS.Client.Tasks.FeatureSet,ESRI.ArcGIS.Client.MapImage,System.Collections.Generic.List{ESRI.ArcGIS.Client.BACore.ReportInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.TaskResultOutput"/> class.
            </summary>
            <param name="recordSet">Feature record set returned by a Business Analyst task.</param>
            <param name="mapImage">Map image returned by a Business Analyst task.</param>
            <param name="reports">List of ReportInfo objects returned by a Business Analyst task.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.TaskResultOutput.RecordSet">
            <summary>
            Feature record set returned by a Business Analyst task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.TaskResultOutput.MapImage">
            <summary>
            Map image returned by a Business Analyst task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.TaskResultOutput.Reports">
            <summary>
            Array of ReportInfo objects returned by a Business Analyst task.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ReportInfo">
            <summary>
            The ReportInfo class encapsulates a single report from a response of
            a Business Analyst task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ReportInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportInfo"/> class.
            </summary>
            <param name="format">Format of the output report.</param>
            <param name="templateName">Name of the output report.</param>
            <param name="url">URL of the output report.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportInfo.Format">
            <summary>
            Format of the output report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportInfo.TemplateName">
            <summary>
            Name of the output report.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ReportInfo.Url">
            <summary>
            URL of the output report.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.GeometryParsers">
            <summary>
            The GeometryParsers class contains static parsers of geometry objects from JSON-decoded objects.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GeometryParsers.ToExtent(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts a JSON-decoded object to an instance of the Envelope type.
            </summary>
            <param name="decodedObject">JSON-decoded object containing an extent.</param>
            <returns>A new instance of the Envelope type or null.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GeometryParsers.ToSpatialReference(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts a JSON-decoded object to an instance of the SpatialReference type.
            </summary>
            <param name="decodedObject">JSON-decoded object containing a spatial reference.</param>
            <returns>A new instance of the SpatialReference type or null.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.BAValueType">
            <summary>
            Enumeration of value types available with summarization variables.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BAValueType.Count">
            <summary>
            The value is a number without units.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BAValueType.Currency">
            <summary>
            The value has currency units.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BAValueType.Percentage">
            <summary>
            The value is a percentage.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BAValueType.Index">
            <summary>
            The value is an index.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.BAValueType.Other">
            <summary>
            The value isn't a number.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer">
            <summary>
            The ThematicMappingLayer class provides a thematically shaded standard geography layer.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer"/> class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.QueryTask">
            <summary>
            The query task associated with this instance of layer.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.Summarizations">
            <summary>
            Available summarizations. This collection is populated while initialization.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.DisableClientCaching">
            <summary>
            If true, adds a timestamp parameter ("_ts") to the REST request to prevent the request from
            being loaded from the browser's cache.
            <br/>Default:&#160;<c>false</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.ProxyUrl">
            <summary>
            The URL to proxy the request through.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.Token">
            <summary>
            Token for accessing a secure task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.Url">
            <summary>
            Base URL of the task.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.AuthenticationUrl">
            <summary>
            The base URL to the Business Analyst Online authentication services.
            </summary>
            <remarks>
            This URL uses the HTTPS protocol contrary to the base URL to ordinary Business Analyst Online tasks
            using the HTTP protocol. Usually, it is not necessary to specify this URL manually because it is calculated
            by default using other available URLs. If the <c>TokenProvider</c> is specified and is the
            <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Authentication.BAOnlineTokenProvider"/>,
            its URL is used as this URL. Otherwise the <c>Url</c> property
            value converted to HTTPS URL using the <see cref="T:ESRI.ArcGIS.Client.BACore.CoreUtils"/>.<c>ToHttpsUrl</c>
            method is returned.
            Manual setting a value for the <c>AuthenticationUrl</c> property overrides default calculations.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.TokenProvider">
            <summary>
            Provider responsible for updating the security token if the last one expires.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.RequestTimeout">
            <summary>
            The request timeout in seconds. A value less than or equal to zero prevents request timeout.
            <br/>Default:&#160;<c>0</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.ThematicMapping.ThematicMappingLayer.ColorRampSchemas">
            <summary>
            Predefined collection of Business Analyst Online color ramp schemas.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters">
            <summary>
            The StdGeographiesByAttributesParameters class provides input parameters for the Standard Geographies by Attributes task.
            </summary>
            <remarks>
            <para>The <c>GeoLevelID</c> parameter specifies ID of the standard geography level
            to search geography features in.</para>
            <para>
            The <c>SearchString</c> parameter specifies a string to search in IDs and names of geography features.
            If this parameter is missing or empty, all features of the data layer are recognized as matching features and
            will be returned.
            </para>
            </remarks>
            <exampleintro>
            The code snippet below creates StdGeographiesByAttributesParameters and then executes a Standard Geographies by Attributes task.
            </exampleintro>
            <example>
            <code>
            StdGeographiesByAttributesParameters parameters = new StdGeographiesByAttributesParameters();
            
            parameters.GeoLevelID = "US.ZIP5";
            parameters.SearchString = "Redlands";
            
            stdGeographiesByAttributesTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesTask"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters.GeoLevelID">
            <summary>
            ID of a standard geography level to find geography features in.
            </summary>
            <remarks>
            A list of available geography levels could be retrieved with the Get Standard Geography Levels task.
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.Utilities.GetStandardGeographyLevelsTask"/>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.StdGeographies.StdGeographiesByAttributesParameters.SearchString">
            <summary>
            A string of characters which is used to query features of the data layer specified by the GeoLevelID parameter value. 
            </summary>
            <remarks>
            A feature of the data layer is recognized as a matching feature
            if its ID or name contains the search string. If the search string is missing
            or empty, all features of the data layer are recognized as matching features.
            </remarks>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo">
            <summary>
            The GeographyLevelInfo class provides a collection of geography layers representing
            the geography level in descending order of scale values.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ESRI.ArcGIS.Client.BACore.ThematicMapping.IGeographyLayerInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo"/> class.
            </summary>
            <param name="name">Geography level name.</param>
            <param name="alias">Geography level alias name.</param>
            <param name="layers">Collection of layers representing this geography level.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.IsAvailable(System.Double)">
            <summary>
            Tests this geography level to be available for the given <paramref name="scale"/>.
            </summary>
            <param name="scale">A required scale.</param>
            <returns>True if this level contains matching layers.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.SelectBestLayer(System.Double)">
            <summary>
            Selects a layer whose scale best matches to the given <paramref name="scale"/>.
            </summary>
            <param name="scale">A required scale.</param>
            <returns>The best matching layer or null.</returns>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.metersPerUnit">
            <summary>
            Contains meters per unit values. Used for resolution to scale conversion.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.ResolutionToScale(System.Double,ESRI.ArcGIS.Client.Tasks.esriUnits)">
            <summary>
            Converts map resolution value to scale value.
            </summary>
            <param name="resolution">Map resolution value.</param>
            <param name="units">Units the resolution is measured in.</param>
            <returns>Scale value.</returns>
            <exclude/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.ResolutionToScale(System.Double)">
            <summary>
            Converts map resolution value to scale value. Map units are assumed to be esriDecimalDegrees.
            </summary>
            <param name="resolution">Map resolution value.</param>
            <returns>Scale value.</returns>
            <exclude/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.ToString">
            <summary>
            Returns this geography level string representation for GUI controls.
            </summary>
            <returns>Alias name value.</returns>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.Name">
            <summary>
            Geography level short name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.AliasName">
            <summary>
            Geography level long alias name.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.LayersCount">
            <summary>
            The number of layers in this geography level.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.ThematicMapping.GeographyLevelInfo.Item(System.Int32)">
            <summary>
            Layer by specified index from in this geography level.
            </summary>
            <param name="layerIndex">Index of a layer.</param>
            <returns>Layer info.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers">
            <summary>
            The GPResultParsers class contains a static parsers of standard ArcGIS GPResult objects.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPBoolean(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a GPBoolean value.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPString(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a GPString value.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPFeatureRecordSetLayer(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a FeatureSet value.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPDataFile(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a data file URL string.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPRasterData(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a MapImage value.
            </summary>
            <remarks>
            Only <c>Href</c> property is specified in the object returned.
            </remarks>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseGPRasterDataLayer(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a MapImage value.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.GPResultParsers.ParseReportInfo(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parses a JSON-decoded GPResult object as a ReportInfo value.
            </summary>
            <param name="decodedObject">A GPResult object decoded from JSON.</param>
            <returns>Result of parsing.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters">
            <summary>
            The DriveTimeParameters class provides input parameters for the Drive Time task.
            </summary>
            <remarks>
            Output options for this task include creating a feature class for subsequent analysis
            (OutputTypes.GetFeatureClass), rendering an output image (OutputTypes.GetMapImage), and
            creating a report (OutputTypes.GetReport). 
            If no output options are specified, the required output options are specified as follows.
            If the <see cref="T:ESRI.ArcGIS.Client.BACore.ReportOptions"/> parameter is specified, the report output is requested.
            Otherwise, the feature class output is requested.
            </remarks>
            <exampleintro>
            The code snippet below creates DriveTimeParameters and then executes a Drive Time task.
            </exampleintro>
            <example>
            <code>
            DriveTimeParameters parameters = new DriveTimeParameters();
            
            // Stores is a PointLayer that could take either data as type 
            // ESRI.ArcGIS.Client.Tasks.FeatureSet or an array of ESRI.ArcGIS.Client.BACore.PointRecord types, e.g.
            //List&lt;PointRecord&gt; points = new List&lt;PointRecord&gt;() {
            //    new PointRecord("store_1", "Store 1", "1", 34.052074, -117.207841)
            //};
            parameters.Stores = new PointLayer(points);
            
            // DriveTimeUnits.esriDriveTimeUnitsMinutes is the default value for DistanceUnits.
            parameters.DistanceUnits = DriveTimeUnits.esriDriveTimeUnitsMinutes;
            
            parameters.Radii = new List&lt;double&gt;() { 3, 5, 10 };
            
            // false is the default value for Donut.
            //parameters.Donut = false;
            
            // STORE_ID is the default value for StoreIDField.
            //parameters.StoreIDField = "STORE_ID";
            
            // Set report options.
            ReportOptions reportOptions = new ReportOptions("PDF", "market_profile");
            reportOptions.Header = new ReportHeader("3-5-7 Min Drive Time Study Areas");
            parameters.ReportOptions = new &lt;ReportOptions&gt;() { reportOptions };
            
            driveTimeTask.ExecuteAsync(parameters, new AsyncResponder(resultHandler, faultHandler));
            </code>
            </example>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters"/> class.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.ToVariables">
            <summary>
            Converts task parameters to request variables.
            </summary>
            <returns>Request variables.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.SetDefaultOutputTypes(ESRI.ArcGIS.Client.BACore.OutputTypes)">
            <summary>
            Sets the GetReport output type if the ReportOptions parameter contains report options;
            otherwise, sets the GetFeatureClass output type.
            </summary>
            <param name="outputTypes">An object to set output types in.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.Stores">
            <summary>
            A point layer containing point features such as businesses, hospitals, schools, etc.,
            which represent the locations from which the Drive Time trade/service areas will originate
            </summary>
            <remarks>
            In situations where the input <c>Stores</c> parameter does not contain a field named "STORE_ID"
            (case insensitive), specification of the <c>StoreIDField</c> parameter is required so the
            analyses can be properly executed.
            </remarks>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.Radii">
            <summary>
            A list of Drive Time times or distances in the units specified with the
            <c>DistanceUnits</c> parameter.
            </summary>
            <remarks>
            This property expects a list containing one or more positive values.
            Drive Time distances should be limited to 90 minutes. Realistic analyses on trade/service
            areas beyond this value should be executed using trade/service areas derived from
            straight-line distances such as with the Simple Rings task.
            </remarks>
            <seealso cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.SimpleRingsTask"/>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.DistanceUnits">
            <summary>
            The time or distance units of the <c>Radii</c> array items
            which is used to calculate the Drive Time trade/service areas.
            <br/>Default:&#160;<c>DriveTimeUnits.esriDriveTimeUnitsMinutes</c>.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.StoreIDField">
            <summary>
            ID of a single store in <c>Stores</c> layer to to generate trade area for.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeParameters.Donut">
            <summary>
            Whether to create non-overlapping donut-style Drive Time trade/service area bands
            instead of overlapping areas that all originate from the store/point origins.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeEventArgs">
            <summary>
            EventArgs for the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/><c>.ExecuteCompleted</c> event (deprecated).
            </summary>
            <remarks>
            <note>
            This class is deprecated. It is provided for compatibility with the previous version of
            the Business Analyst Online API for Silverlight. Use a result event handler with a more general version of
            EventArgs type, for example with the <c>BATaskEventArgs&lt;TaskResultOutput&gt;</c> type.
            </note>
            </remarks>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeEventArgs.#ctor(ESRI.ArcGIS.Client.BACore.Client.BARequestState)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeEventArgs"/> class.
            </summary>
            <param name="requestState">A request state to create event args by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeEventArgs.TaskResultOutput">
            <summary>
            The TaskResultOutput returned by the <see cref="T:ESRI.ArcGIS.Client.BAO.Tasks.TradeAreas.DriveTimeTask"/>.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.TaskMessage">
            <summary>
            The TaskMessage class provides a message created during execution of a Business Analyst task.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.TaskMessage.#ctor(ESRI.ArcGIS.Client.BACore.MessageType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.TaskMessage"/> class.
            </summary>
            <param name="messageType">Message type.</param>
            <param name="messageString">Message string.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.TaskMessage.MessageType">
            <summary>
            Message type.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.TaskMessage.MessageString">
            <summary>
            Message string.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.MessageType">
            <summary>
            Types of standard ArcGIS messages.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.UNKNOWN">
            <summary>
            Unknown message type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.esriJobMessageTypeAbort">
            <summary>
            Abort message type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.esriJobMessageTypeEmpty">
            <summary>
            Empty message type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.esriJobMessageTypeError">
            <summary>
            Error message type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.esriJobMessageTypeInformative">
            <summary>
            Info message type.
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.Client.BACore.MessageType.esriJobMessageTypeWarning">
            <summary>
            Warning message type.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities">
            <summary>
            The ConversionUtilities class contains a collection of static utility methods useful in JSON
            encoding and parsing process.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.ObjectToFeatureSet(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <overloads>Converts an object to a new instance of the FeatureSet class.</overloads>
            <summary>
            Converts a JSON-decoded object to a new instance of the FeatureSet type.
            </summary>
            <param name="decodedObject">A Feature Set object decoded from JSON.</param>
            <returns>A new instance of the FeatureSet type or null.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.ObjectToFeatureSet(System.String)">
            <summary>
            Converts a JSON string to a new instance of the FeatureSet class.
            </summary>
            <param name="input">A JSON string.</param>
            <returns>A new instance of the FeatureSet type or null.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.DecodeToJsonObject(System.String)">
            <summary>
            Decodes a JSON string.
            </summary>
            <param name="input">A JSON string.</param>
            <returns>A JSON-decoded object.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.ObjectToMapImage(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts a JSON-decoded object to an instance of the MapImage type.
            </summary>
            <param name="decodedObject">JSON-decoded object.</param>
            <returns>A new instance of the MapImage type or null.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.WriteFeatureSetToJson(ESRI.ArcGIS.Client.BACore.BAJsonWriter,ESRI.ArcGIS.Client.Tasks.FeatureSet)">
            <overloads>Serializes a FeatureSet to JSON writer.</overloads>
            <summary>
            Serializes a FeatureSet to JSON writer.
            </summary>
            <param name="writer">JSON writer.</param>
            <param name="featureSet">Feature record set.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.WriteFeatureSetToJson(ESRI.ArcGIS.Client.BACore.BAJsonWriter,ESRI.ArcGIS.Client.Tasks.FeatureSet,System.Boolean)">
            <summary>
            Serializes a FeatureSet to JSON writer.
            </summary>
            <param name="writer">JSON writer.</param>
            <param name="featureSet">Feature record set.</param>
            <param name="includeGeometry">If true, geometry is included into output if it is specified in features.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.WriteSpatialReferenceToJson(ESRI.ArcGIS.Client.BACore.BAJsonWriter,ESRI.ArcGIS.Client.Geometry.SpatialReference)">
            <summary>
            Serializes a SpatialReference to JSON writer.
            </summary>
            <param name="writer">JSON writer.</param>
            <param name="spatialReference">Spatial Reference.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.ConversionUtilities.SpatialReferenceToJson(ESRI.ArcGIS.Client.Geometry.SpatialReference)">
            <summary>
            Serializes a SpatialReference to JSON string.
            </summary>
            <param name="spatialReference">Spatial Reference.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider">
            <summary>
            The BatchTaskProvider class encapsulates a task execution algorithm.
            </summary>
            <seealso cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskParameters"/>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.BACommand)">
            <overloads>Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/> class by a command.
            </summary>
            <param name="command">Task execution command.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/> class by task parameters.
            </summary>
            <param name="parameters">Task parameters.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.#ctor(ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/> class by a delegate.
            </summary>
            <param name="taskProvider">Task provider delegate.</param>
        </member>
        <member name="M:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider"/> class by an object.
            </summary>
            <remarks>
            This constructor receives an object of any type allowed by other constructors,
            i.e. an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/>, <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters"/>,
            or <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate"/> type
            can be passed as an object. Also, the object can be an instance of the BatchTaskProvider class
            itself. In the last case, its shallow copy is constructed.
            </remarks>
            <param name="obj">An object to construct this instance by.</param>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Command">
            <summary>
            Task execution command.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Parameters">
            <summary>
            Task parameters.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.TaskProvider">
            <summary>
            Task provider.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate">
            <summary>
            This delegate returns a task execution object.
            </summary>
            <remarks>
            The output object can be an instance of the <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BACommand"/>, <see cref="T:ESRI.ArcGIS.Client.BACore.Client.IBATaskParameters"/>,
            <see cref="T:ESRI.ArcGIS.Client.BACore.Client.BatchTaskProvider.Delegate"/>, or BatchTaskProvider type. The null return value is allowed.
            </remarks>
            <param name="parameters">Parameters of the batch task.</param>
            <param name="client">An instance of client used in the batch task.</param>
        </member>
    </members>
</doc>
